
PTH_computation.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00804000  00804000  0000144e  2**0
                  ALLOC, LOAD, DATA
  1 .text         00000160  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002f  00804000  00804000  0000144e  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  0000144e  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 00000196  00000000  00000000  0000147d  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  00001613  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003d85  00000000  00000000  0000167b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002f20  00000000  00000000  00005400  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000083a  00000000  00000000  00008320  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  00008b5c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001536  00000000  00000000  00008cbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000df4  00000000  00000000  0000a1f2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  0000afe6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  000013ac  000013ac  00001440  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000b040  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .text.MS8607_write 0000002e  0000120c  0000120c  000012a0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.MS8607_PT_read 0000004a  000010d0  000010d0  00001164  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.MS8607_PT_read_convert 0000007c  00000e86  00000e86  00000f1a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.MS8607_init 0000001a  0000129a  0000129a  0000132e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.MS8607_hum_data 0000007a  00000f7e  00000f7e  00001012  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.MS8607_hum_hold 000000ee  00000a78  00000a78  00000b0c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.MS8607_pressure_temp_calc 0000074c  00000160  00000160  000001f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.MS8607_hum_calc 00000040  0000115e  0000115e  000011f2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.main    000001cc  000008ac  000008ac  00000940  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text         0000000e  00001346  00001346  000013da  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text         000000ce  00000d18  00000d18  00000dac  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text         00000008  00001396  00001396  0000142a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text         000000de  00000b66  00000b66  00000bfa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text         0000005e  00001072  00001072  00001106  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text         0000000c  0000137e  0000137e  00001412  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text         0000007a  00000ff8  00000ff8  0000108c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text         0000007c  00000f02  00000f02  00000f96  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text         0000000c  0000138a  0000138a  0000141e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text         00000006  000013a6  000013a6  0000143a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text         00000020  0000125c  0000125c  000012f0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text         0000000e  00001354  00001354  000013e8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .text         0000000e  00001362  00001362  000013f6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text         00000022  0000123a  0000123a  000012ce  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text         00000044  0000111a  0000111a  000011ae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text         0000000e  00001370  00001370  00001404  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .text         00000008  0000139e  0000139e  00001432  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 .text         000000d4  00000c44  00000c44  00000cd8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .text.libgcc.mul 00000016  000012e4  000012e4  00001378  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .text.libgcc.mul 000000a0  00000de6  00000de6  00000e7a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text.libgcc.mul 00000012  00001310  00001310  000013a4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.libgcc.builtins 00000032  000011da  000011da  0000126e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .text.libgcc.builtins 0000003c  0000119e  0000119e  00001232  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .text.libgcc  00000012  00001322  00001322  000013b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .text.libgcc  00000018  000012b4  000012b4  00001348  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .text.libgcc  00000012  00001334  00001334  000013c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 .text.libgcc  00000018  000012cc  000012cc  00001360  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .text.libgcc.mul 0000001e  0000127c  0000127c  00001310  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 .text.__dummy_fini 00000002  000013b4  000013b4  00001448  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 .text.__dummy_funcs_on_exit 00000002  000013b6  000013b6  0000144a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 .text.__dummy_simulator_exit 00000002  000013b8  000013b8  0000144c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 .text.exit    00000016  000012fa  000012fa  0000138e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .text._Exit   00000004  000013b0  000013b0  00001444  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__ctors_end>
   4:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
   8:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
   c:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  10:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  14:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  18:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  1c:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  20:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  24:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  28:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  2c:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  30:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  34:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  38:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  3c:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  40:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  44:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  48:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  4c:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  50:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  54:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  58:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  5c:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  60:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  64:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  68:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  6c:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  70:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  74:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  78:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  7c:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  80:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  84:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  88:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  8c:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  90:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  94:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  98:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  9c:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  a0:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  a4:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  a8:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  ac:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  b0:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  b4:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  b8:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  bc:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  c0:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  c4:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  c8:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  cc:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  d0:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  d4:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  d8:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  dc:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  e0:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  e4:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  e8:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  ec:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>
  f0:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__bad_interrupt>

000000f4 <.dinit>:
  f4:	40 00       	.word	0x0040	; ????
  f6:	40 2f       	mov	r20, r16
  f8:	80 00       	.word	0x0080	; ????

000000fa <__ctors_end>:
  fa:	80 91 01 10 	lds	r24, 0x1001	; 0x801001 <__TEXT_REGION_LENGTH__+0x7e1001>
  fe:	8f 7c       	andi	r24, 0xCF	; 207
 100:	80 60       	ori	r24, 0x00	; 0
 102:	80 68       	ori	r24, 0x80	; 128
 104:	80 93 01 10 	sts	0x1001, r24	; 0x801001 <__TEXT_REGION_LENGTH__+0x7e1001>
 108:	11 24       	eor	r1, r1
 10a:	1f be       	out	0x3f, r1	; 63
 10c:	cf ef       	ldi	r28, 0xFF	; 255
 10e:	cd bf       	out	0x3d, r28	; 61
 110:	df e7       	ldi	r29, 0x7F	; 127
 112:	de bf       	out	0x3e, r29	; 62

00000114 <__do_copy_data>:
 114:	e4 ef       	ldi	r30, 0xF4	; 244
 116:	f0 e0       	ldi	r31, 0x00	; 0
 118:	40 e0       	ldi	r20, 0x00	; 0
 11a:	19 c0       	rjmp	.+50     	; 0x14e <__do_clear_bss+0x8>
 11c:	b7 91       	elpm	r27, Z+
 11e:	a7 91       	elpm	r26, Z+
 120:	37 91       	elpm	r19, Z+
 122:	27 91       	elpm	r18, Z+
 124:	07 91       	elpm	r16, Z+
 126:	07 fd       	sbrc	r16, 7
 128:	0e c0       	rjmp	.+28     	; 0x146 <__do_clear_bss>
 12a:	97 91       	elpm	r25, Z+
 12c:	87 91       	elpm	r24, Z+
 12e:	ef 01       	movw	r28, r30
 130:	f9 2f       	mov	r31, r25
 132:	e8 2f       	mov	r30, r24
 134:	0b bf       	out	0x3b, r16	; 59
 136:	07 90       	elpm	r0, Z+
 138:	0d 92       	st	X+, r0
 13a:	a2 17       	cp	r26, r18
 13c:	b3 07       	cpc	r27, r19
 13e:	d9 f7       	brne	.-10     	; 0x136 <__do_copy_data+0x22>
 140:	fe 01       	movw	r30, r28
 142:	1b be       	out	0x3b, r1	; 59
 144:	04 c0       	rjmp	.+8      	; 0x14e <__do_clear_bss+0x8>

00000146 <__do_clear_bss>:
 146:	1d 92       	st	X+, r1
 148:	a2 17       	cp	r26, r18
 14a:	b3 07       	cpc	r27, r19
 14c:	e1 f7       	brne	.-8      	; 0x146 <__do_clear_bss>
 14e:	e9 3f       	cpi	r30, 0xF9	; 249
 150:	f4 07       	cpc	r31, r20
 152:	21 f7       	brne	.-56     	; 0x11c <__do_copy_data+0x8>
 154:	0e 94 56 04 	call	0x8ac	; 0x8ac <main>
 158:	0c 94 7d 09 	jmp	0x12fa	; 0x12fa <exit>

0000015c <_exit>:
 15c:	f8 94       	cli

0000015e <__stop_program>:
 15e:	ff cf       	rjmp	.-2      	; 0x15e <__stop_program>

Disassembly of section .text:

000013ac <__bad_interrupt>:
    13ac:	0c 94 00 00 	jmp	0	; 0x0 <__FLMAP_SECTION0__>

Disassembly of section .text.MS8607_write:

0000120c <MS8607_write>:
void MS8607_pressure_temp_calc(uint32_t D1, uint32_t D2, uint16_t C1, uint16_t C2, uint16_t C3, uint16_t C4, uint16_t C5, uint16_t C6);
void MS8607_hum_calc(uint16_t D3);

/********************Function Code********************/
void MS8607_write(uint8_t SLAVE_ADDRESS, uint8_t cmd){
	while(!(TWI_BUSSTATE_IDLE_gc & TWI0.MSTATUS)); //waiting for idle
    120c:	90 91 05 09 	lds	r25, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    1210:	90 ff       	sbrs	r25, 0
    1212:	fc cf       	rjmp	.-8      	; 0x120c <MS8607_write>
	TWI0.MADDR = (SLAVE_ADDRESS << 1);
    1214:	88 0f       	add	r24, r24
    1216:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
	
	while(!(TWI0.MSTATUS & TWI_WIF_bm)); //waiting to be able to write byte
    121a:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    121e:	86 ff       	sbrs	r24, 6
    1220:	fc cf       	rjmp	.-8      	; 0x121a <MS8607_write+0xe>
	TWI0.MDATA = cmd; //writing command
    1222:	60 93 08 09 	sts	0x0908, r22	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
	
	while(!(TWI0.MSTATUS & TWI_WIF_bm)); //waiting to be able to write byte
    1226:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    122a:	86 ff       	sbrs	r24, 6
    122c:	fc cf       	rjmp	.-8      	; 0x1226 <MS8607_write+0x1a>
	TWI0.MCTRLB |= 0x03;//stop bit
    122e:	e0 e0       	ldi	r30, 0x00	; 0
    1230:	f9 e0       	ldi	r31, 0x09	; 9
    1232:	84 81       	ldd	r24, Z+4	; 0x04
    1234:	83 60       	ori	r24, 0x03	; 3
    1236:	84 83       	std	Z+4, r24	; 0x04
    1238:	08 95       	ret

Disassembly of section .text.MS8607_PT_read:

000010d0 <MS8607_PT_read>:
}
uint16_t MS8607_PT_read(uint8_t SLAVE_ADDRESS, uint8_t high_byte, uint8_t low_byte ){
	
	uint16_t data; 
	
	while(!(TWI_BUSSTATE_IDLE_gc & TWI0.MSTATUS)); //waiting for idle
    10d0:	90 91 05 09 	lds	r25, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    10d4:	90 ff       	sbrs	r25, 0
    10d6:	fc cf       	rjmp	.-8      	; 0x10d0 <MS8607_PT_read>
	TWI0.MADDR = (SLAVE_ADDRESS << 1) | 0x01;
    10d8:	90 e0       	ldi	r25, 0x00	; 0
    10da:	88 0f       	add	r24, r24
    10dc:	99 1f       	adc	r25, r25
    10de:	81 60       	ori	r24, 0x01	; 1
    10e0:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
	
	while(!(TWI_RIF_bm & TWI0.MSTATUS)); //waiting for data to be received
    10e4:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    10e8:	88 23       	and	r24, r24
    10ea:	e4 f7       	brge	.-8      	; 0x10e4 <MS8607_PT_read+0x14>
	
	high_byte = TWI0.MDATA; //reading high byte
    10ec:	e0 e0       	ldi	r30, 0x00	; 0
    10ee:	f9 e0       	ldi	r31, 0x09	; 9
    10f0:	80 85       	ldd	r24, Z+8	; 0x08
	TWI0.MCTRLB = 0x02; //acknowledge bit
    10f2:	92 e0       	ldi	r25, 0x02	; 2
    10f4:	94 83       	std	Z+4, r25	; 0x04
	
	while(!(TWI_RIF_bm & TWI0.MSTATUS)); //waiting for data to be received
    10f6:	90 91 05 09 	lds	r25, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    10fa:	99 23       	and	r25, r25
    10fc:	e4 f7       	brge	.-8      	; 0x10f6 <MS8607_PT_read+0x26>
	low_byte = TWI0.MDATA; //reading low byte
    10fe:	e0 e0       	ldi	r30, 0x00	; 0
    1100:	f9 e0       	ldi	r31, 0x09	; 9
    1102:	20 85       	ldd	r18, Z+8	; 0x08
	
	TWI0.MCTRLB = 0x07; //not acknowledge bit
    1104:	97 e0       	ldi	r25, 0x07	; 7
    1106:	94 83       	std	Z+4, r25	; 0x04
	TWI0.MCTRLB |= 0x03; //stop bit
    1108:	94 81       	ldd	r25, Z+4	; 0x04
    110a:	93 60       	ori	r25, 0x03	; 3
    110c:	94 83       	std	Z+4, r25	; 0x04
	
	data = ((high_byte << 8) | (low_byte & 0x80));
    110e:	90 e0       	ldi	r25, 0x00	; 0
    1110:	98 2f       	mov	r25, r24
    1112:	88 27       	eor	r24, r24
    1114:	20 78       	andi	r18, 0x80	; 128
	
	return data;
}
    1116:	82 2b       	or	r24, r18
    1118:	08 95       	ret

Disassembly of section .text.MS8607_PT_read_convert:

00000e86 <MS8607_PT_read_convert>:
uint32_t MS8607_PT_read_convert(uint8_t SLAVE_ADDRESS, uint8_t high_byte, uint8_t mid_byte, uint8_t low_byte){
		
	uint32_t data;
	
	while(!(TWI_BUSSTATE_IDLE_gc & TWI0.MSTATUS)); //waiting for idle
 e86:	90 91 05 09 	lds	r25, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
 e8a:	90 ff       	sbrs	r25, 0
 e8c:	fc cf       	rjmp	.-8      	; 0xe86 <MS8607_PT_read_convert>
	TWI0.MADDR = (SLAVE_ADDRESS << 1) | 0x01; //read mode
 e8e:	90 e0       	ldi	r25, 0x00	; 0
 e90:	88 0f       	add	r24, r24
 e92:	99 1f       	adc	r25, r25
 e94:	81 60       	ori	r24, 0x01	; 1
 e96:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
	
	while(!(TWI_RIF_bm & TWI0.MSTATUS)); //waiting for data to be received
 e9a:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
 e9e:	88 23       	and	r24, r24
 ea0:	e4 f7       	brge	.-8      	; 0xe9a <MS8607_PT_read_convert+0x14>
	high_byte = TWI0.MDATA; //reading high byte
 ea2:	e0 e0       	ldi	r30, 0x00	; 0
 ea4:	f9 e0       	ldi	r31, 0x09	; 9
 ea6:	40 85       	ldd	r20, Z+8	; 0x08
	TWI0.MCTRLB = 0x02; //acknowledge bit
 ea8:	82 e0       	ldi	r24, 0x02	; 2
 eaa:	84 83       	std	Z+4, r24	; 0x04
	
	while(!(TWI_RIF_bm & TWI0.MSTATUS)); //waiting for data to be received
 eac:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
 eb0:	88 23       	and	r24, r24
 eb2:	e4 f7       	brge	.-8      	; 0xeac <MS8607_PT_read_convert+0x26>
	mid_byte = TWI0.MDATA; //reading mid byte
 eb4:	e0 e0       	ldi	r30, 0x00	; 0
 eb6:	f9 e0       	ldi	r31, 0x09	; 9
 eb8:	90 85       	ldd	r25, Z+8	; 0x08
	TWI0.MCTRLB = 0x02; //acknowledge bit
 eba:	82 e0       	ldi	r24, 0x02	; 2
 ebc:	84 83       	std	Z+4, r24	; 0x04
	
	while(!(TWI_RIF_bm & TWI0.MSTATUS)); //waiting for data to be received
 ebe:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
 ec2:	88 23       	and	r24, r24
 ec4:	e4 f7       	brge	.-8      	; 0xebe <MS8607_PT_read_convert+0x38>
	low_byte = TWI0.MDATA; //reading low byte
 ec6:	e0 e0       	ldi	r30, 0x00	; 0
 ec8:	f9 e0       	ldi	r31, 0x09	; 9
 eca:	20 85       	ldd	r18, Z+8	; 0x08
	
	//while((TWI_RIF_bm & TWI0.MSTATUS)); //waiting for nack [might not need this]
	TWI0.MCTRLB = 0x07; //not acknowledge bit
 ecc:	87 e0       	ldi	r24, 0x07	; 7
 ece:	84 83       	std	Z+4, r24	; 0x04
	TWI0.MCTRLB |= 0x03; //stop bit
 ed0:	84 81       	ldd	r24, Z+4	; 0x04
 ed2:	83 60       	ori	r24, 0x03	; 3
 ed4:	84 83       	std	Z+4, r24	; 0x04
	
	data = ((uint32_t)high_byte << 16) | ((uint32_t)mid_byte << 8) | low_byte;
 ed6:	50 e0       	ldi	r21, 0x00	; 0
 ed8:	60 e0       	ldi	r22, 0x00	; 0
 eda:	70 e0       	ldi	r23, 0x00	; 0
 edc:	ba 01       	movw	r22, r20
 ede:	55 27       	eor	r21, r21
 ee0:	44 27       	eor	r20, r20
 ee2:	89 2f       	mov	r24, r25
 ee4:	90 e0       	ldi	r25, 0x00	; 0
 ee6:	a0 e0       	ldi	r26, 0x00	; 0
 ee8:	b0 e0       	ldi	r27, 0x00	; 0
 eea:	ba 2f       	mov	r27, r26
 eec:	a9 2f       	mov	r26, r25
 eee:	98 2f       	mov	r25, r24
 ef0:	88 27       	eor	r24, r24
 ef2:	84 2b       	or	r24, r20
 ef4:	95 2b       	or	r25, r21
 ef6:	a6 2b       	or	r26, r22
 ef8:	b7 2b       	or	r27, r23
 efa:	bc 01       	movw	r22, r24
 efc:	cd 01       	movw	r24, r26
 efe:	62 2b       	or	r22, r18
	
	return data;
}
 f00:	08 95       	ret

Disassembly of section .text.MS8607_init:

0000129a <MS8607_init>:
void MS8607_init(){
	PORTA_DIR |= PIN3_bm | PIN2_bm;
    129a:	e0 e0       	ldi	r30, 0x00	; 0
    129c:	f4 e0       	ldi	r31, 0x04	; 4
    129e:	80 81       	ld	r24, Z
    12a0:	8c 60       	ori	r24, 0x0C	; 12
    12a2:	80 83       	st	Z, r24
	TWI0.MBAUD = 0x00;//setting up the baud rate
    12a4:	e0 e0       	ldi	r30, 0x00	; 0
    12a6:	f9 e0       	ldi	r31, 0x09	; 9
    12a8:	16 82       	std	Z+6, r1	; 0x06
	TWI0.MCTRLA = TWI_ENABLE_bm; //enable TWI
    12aa:	81 e0       	ldi	r24, 0x01	; 1
    12ac:	83 83       	std	Z+3, r24	; 0x03
	TWI0.DBGCTRL = 0x01; 
    12ae:	82 83       	std	Z+2, r24	; 0x02
	TWI0.MSTATUS = TWI_BUSSTATE_IDLE_gc; //make TWI bus idle
    12b0:	85 83       	std	Z+5, r24	; 0x05
    12b2:	08 95       	ret

Disassembly of section .text.MS8607_hum_data:

00000f7e <MS8607_hum_data>:
}
void MS8607_hum_data(uint8_t SLAVE_ADDRESS, uint8_t cmd){
	//write sequence
	uint8_t user_data; 
	
	while(!(TWI_BUSSTATE_IDLE_gc & TWI0.MSTATUS)); //waiting for idle
 f7e:	90 91 05 09 	lds	r25, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
 f82:	90 ff       	sbrs	r25, 0
 f84:	fc cf       	rjmp	.-8      	; 0xf7e <MS8607_hum_data>
	TWI0.MADDR = (SLAVE_ADDRESS << 1);
 f86:	28 2f       	mov	r18, r24
 f88:	22 0f       	add	r18, r18
 f8a:	20 93 07 09 	sts	0x0907, r18	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
	
	while(!(TWI0.MSTATUS & TWI_WIF_bm)); //waiting to be able to write byte
 f8e:	90 91 05 09 	lds	r25, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
 f92:	96 ff       	sbrs	r25, 6
 f94:	fc cf       	rjmp	.-8      	; 0xf8e <MS8607_hum_data+0x10>
	TWI0.MDATA = cmd; //writing command
 f96:	60 93 08 09 	sts	0x0908, r22	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
	
	while(!(TWI0.MSTATUS & TWI_WIF_bm)); //waiting to be able to write byte
 f9a:	90 91 05 09 	lds	r25, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
 f9e:	96 ff       	sbrs	r25, 6
 fa0:	fc cf       	rjmp	.-8      	; 0xf9a <MS8607_hum_data+0x1c>
	
	TWI0.MCTRLB |= TWI_MCMD_REPSTART_gc; //issue repeated start
 fa2:	e0 e0       	ldi	r30, 0x00	; 0
 fa4:	f9 e0       	ldi	r31, 0x09	; 9
 fa6:	94 81       	ldd	r25, Z+4	; 0x04
 fa8:	91 60       	ori	r25, 0x01	; 1
 faa:	94 83       	std	Z+4, r25	; 0x04
	
	//read sequence
	//while(!(TWI_BUSSTATE_IDLE_gc & TWI0.MSTATUS)); //waiting for idle (do I need this?)
	TWI0.MADDR = (SLAVE_ADDRESS << 1) | 0x01; //read mode
 fac:	90 e0       	ldi	r25, 0x00	; 0
 fae:	88 0f       	add	r24, r24
 fb0:	99 1f       	adc	r25, r25
 fb2:	81 60       	ori	r24, 0x01	; 1
 fb4:	87 83       	std	Z+7, r24	; 0x07
	
	while(!(TWI_RIF_bm & TWI0.MSTATUS)); //waiting for data to be received
 fb6:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
 fba:	88 23       	and	r24, r24
 fbc:	e4 f7       	brge	.-8      	; 0xfb6 <MS8607_hum_data+0x38>
	
	user_data = TWI0.MDATA; //reading user data
 fbe:	e0 e0       	ldi	r30, 0x00	; 0
 fc0:	f9 e0       	ldi	r31, 0x09	; 9
 fc2:	90 85       	ldd	r25, Z+8	; 0x08
	//wait for nack??
	TWI0.MCTRLB |= TWI_MCMD_REPSTART_gc; //issue repeated start
 fc4:	84 81       	ldd	r24, Z+4	; 0x04
 fc6:	81 60       	ori	r24, 0x01	; 1
 fc8:	84 83       	std	Z+4, r24	; 0x04
	
	//write sequence
	//while(!(TWI_BUSSTATE_IDLE_gc & TWI0.MSTATUS)); //waiting for idle (do I need this again)
	TWI0.MADDR = (SLAVE_ADDRESS << 1); //write mode
 fca:	27 83       	std	Z+7, r18	; 0x07
	
	while(!(TWI0.MSTATUS & TWI_WIF_bm)); //waiting to be able to write byte
 fcc:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
 fd0:	86 ff       	sbrs	r24, 6
 fd2:	fc cf       	rjmp	.-8      	; 0xfcc <MS8607_hum_data+0x4e>
	TWI0.MDATA = cmd; //writing command
 fd4:	60 93 08 09 	sts	0x0908, r22	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
	
	while(!(TWI0.MSTATUS & TWI_WIF_bm)); //waiting to be able to write byte
 fd8:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
 fdc:	86 ff       	sbrs	r24, 6
 fde:	fc cf       	rjmp	.-8      	; 0xfd8 <MS8607_hum_data+0x5a>
	TWI0.MDATA = user_data;
 fe0:	90 93 08 09 	sts	0x0908, r25	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
	while(!(TWI0.MSTATUS & TWI_WIF_bm)); //waiting to be able to write byte
 fe4:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
 fe8:	86 ff       	sbrs	r24, 6
 fea:	fc cf       	rjmp	.-8      	; 0xfe4 <MS8607_hum_data+0x66>
	TWI0.MCTRLB |= 0x03;//stop bit
 fec:	e0 e0       	ldi	r30, 0x00	; 0
 fee:	f9 e0       	ldi	r31, 0x09	; 9
 ff0:	84 81       	ldd	r24, Z+4	; 0x04
 ff2:	83 60       	ori	r24, 0x03	; 3
 ff4:	84 83       	std	Z+4, r24	; 0x04
 ff6:	08 95       	ret

Disassembly of section .text.MS8607_hum_hold:

00000a78 <MS8607_hum_hold>:
	//calc compensated humidity
	comp_hum = (hum + (25 - TEMP_F) * (float)(-0.15));
	
	return comp_hum;
}
uint16_t MS8607_hum_hold(uint8_t SLAVE_ADDRESS, uint8_t cmd, uint8_t high_data, uint8_t low_data, uint8_t checksum){
 a78:	cf 92       	push	r12
 a7a:	df 92       	push	r13
 a7c:	ef 92       	push	r14
 a7e:	ff 92       	push	r15
 a80:	cf 93       	push	r28
 a82:	df 93       	push	r29
	
	uint16_t hum, comp_hum;
	
	//write sequence
	while(!(TWI_BUSSTATE_IDLE_gc & TWI0.MSTATUS)); //waiting for idle
 a84:	90 91 05 09 	lds	r25, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
 a88:	90 ff       	sbrs	r25, 0
 a8a:	fc cf       	rjmp	.-8      	; 0xa84 <MS8607_hum_hold+0xc>
	TWI0.MADDR = (SLAVE_ADDRESS << 1);
 a8c:	98 2f       	mov	r25, r24
 a8e:	99 0f       	add	r25, r25
 a90:	90 93 07 09 	sts	0x0907, r25	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
	
	while(!(TWI0.MSTATUS & TWI_WIF_bm)); //waiting to be able to write byte
 a94:	90 91 05 09 	lds	r25, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
 a98:	96 ff       	sbrs	r25, 6
 a9a:	fc cf       	rjmp	.-8      	; 0xa94 <MS8607_hum_hold+0x1c>
	TWI0.MDATA = cmd; //writing command
 a9c:	60 93 08 09 	sts	0x0908, r22	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
	
	while(!(TWI0.MSTATUS & TWI_WIF_bm)); //waiting to be able to write byte
 aa0:	90 91 05 09 	lds	r25, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
 aa4:	96 ff       	sbrs	r25, 6
 aa6:	fc cf       	rjmp	.-8      	; 0xaa0 <MS8607_hum_hold+0x28>
	TWI0.MCTRLB |= TWI_MCMD_REPSTART_gc; //issue repeated start
 aa8:	e0 e0       	ldi	r30, 0x00	; 0
 aaa:	f9 e0       	ldi	r31, 0x09	; 9
 aac:	94 81       	ldd	r25, Z+4	; 0x04
 aae:	91 60       	ori	r25, 0x01	; 1
 ab0:	94 83       	std	Z+4, r25	; 0x04
	//read sequence
	//while(!(TWI_BUSSTATE_IDLE_gc & TWI0.MSTATUS)); //waiting for idle (do I need this again?)
	TWI0.MADDR = (SLAVE_ADDRESS << 1) | 0x01; //read mode
 ab2:	90 e0       	ldi	r25, 0x00	; 0
 ab4:	88 0f       	add	r24, r24
 ab6:	99 1f       	adc	r25, r25
 ab8:	81 60       	ori	r24, 0x01	; 1
 aba:	87 83       	std	Z+7, r24	; 0x07
	
	while(!(TWI_RIF_bm & TWI0.MSTATUS)); //waiting for data to be received
 abc:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
 ac0:	88 23       	and	r24, r24
 ac2:	e4 f7       	brge	.-8      	; 0xabc <MS8607_hum_hold+0x44>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 ac4:	2f ef       	ldi	r18, 0xFF	; 255
 ac6:	83 ef       	ldi	r24, 0xF3	; 243
 ac8:	91 e0       	ldi	r25, 0x01	; 1
 aca:	21 50       	subi	r18, 0x01	; 1
 acc:	80 40       	sbci	r24, 0x00	; 0
 ace:	90 40       	sbci	r25, 0x00	; 0
 ad0:	e1 f7       	brne	.-8      	; 0xaca <MS8607_hum_hold+0x52>
 ad2:	00 c0       	rjmp	.+0      	; 0xad4 <MS8607_hum_hold+0x5c>
 ad4:	00 00       	nop
	_delay_ms(160);
	high_data = TWI0.MDATA; //reading high byte
 ad6:	e0 e0       	ldi	r30, 0x00	; 0
 ad8:	f9 e0       	ldi	r31, 0x09	; 9
 ada:	60 85       	ldd	r22, Z+8	; 0x08
	TWI0.MCTRLB = 0x02; //acknowledge bit
 adc:	82 e0       	ldi	r24, 0x02	; 2
 ade:	84 83       	std	Z+4, r24	; 0x04
	//_delay_ms(160);
	while(!(TWI_RIF_bm & TWI0.MSTATUS)); //waiting for data to be received
 ae0:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
 ae4:	88 23       	and	r24, r24
 ae6:	e4 f7       	brge	.-8      	; 0xae0 <MS8607_hum_hold+0x68>
	low_data = TWI0.MDATA; //reading low byte
 ae8:	e0 e0       	ldi	r30, 0x00	; 0
 aea:	f9 e0       	ldi	r31, 0x09	; 9
 aec:	90 85       	ldd	r25, Z+8	; 0x08
	TWI0.MCTRLB = 0x02; //acknowledge bit
 aee:	82 e0       	ldi	r24, 0x02	; 2
 af0:	84 83       	std	Z+4, r24	; 0x04
	
	while(!(TWI_RIF_bm & TWI0.MSTATUS)); //waiting for data to be received
 af2:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
 af6:	88 23       	and	r24, r24
 af8:	e4 f7       	brge	.-8      	; 0xaf2 <MS8607_hum_hold+0x7a>
	checksum = TWI0.MDATA; //getting the checksum
 afa:	e0 e0       	ldi	r30, 0x00	; 0
 afc:	f9 e0       	ldi	r31, 0x09	; 9
 afe:	80 85       	ldd	r24, Z+8	; 0x08
	//need to wait for nack??
	TWI0.MCTRLB = 0x07; //not acknowledge bit
 b00:	87 e0       	ldi	r24, 0x07	; 7
 b02:	84 83       	std	Z+4, r24	; 0x04
	TWI0.MCTRLB |= 0x03; //stop bit
 b04:	84 81       	ldd	r24, Z+4	; 0x04
 b06:	83 60       	ori	r24, 0x03	; 3
 b08:	84 83       	std	Z+4, r24	; 0x04
	
	hum = (high_data << 8) | (low_data); //bits 15 to 2
 b0a:	70 e0       	ldi	r23, 0x00	; 0
 b0c:	76 2f       	mov	r23, r22
 b0e:	66 27       	eor	r22, r22
 b10:	eb 01       	movw	r28, r22
 b12:	c9 2b       	or	r28, r25
	
	//calc compensated humidity
	comp_hum = (hum + (25 - TEMP_F) * (float)(-0.15));
 b14:	20 91 27 40 	lds	r18, 0x4027	; 0x804027 <TEMP_F>
 b18:	30 91 28 40 	lds	r19, 0x4028	; 0x804028 <TEMP_F+0x1>
 b1c:	40 91 29 40 	lds	r20, 0x4029	; 0x804029 <TEMP_F+0x2>
 b20:	50 91 2a 40 	lds	r21, 0x402A	; 0x80402a <TEMP_F+0x3>
 b24:	60 e0       	ldi	r22, 0x00	; 0
 b26:	70 e0       	ldi	r23, 0x00	; 0
 b28:	88 ec       	ldi	r24, 0xC8	; 200
 b2a:	91 e4       	ldi	r25, 0x41	; 65
 b2c:	0e 94 a3 09 	call	0x1346	; 0x1346 <__subsf3>
 b30:	2a e9       	ldi	r18, 0x9A	; 154
 b32:	39 e9       	ldi	r19, 0x99	; 153
 b34:	49 e1       	ldi	r20, 0x19	; 25
 b36:	5e eb       	ldi	r21, 0xBE	; 190
 b38:	0e 94 cf 09 	call	0x139e	; 0x139e <__mulsf3>
 b3c:	6b 01       	movw	r12, r22
 b3e:	7c 01       	movw	r14, r24
 b40:	be 01       	movw	r22, r28
 b42:	80 e0       	ldi	r24, 0x00	; 0
 b44:	90 e0       	ldi	r25, 0x00	; 0
 b46:	0e 94 fc 07 	call	0xff8	; 0xff8 <__floatunsisf>
 b4a:	a7 01       	movw	r20, r14
 b4c:	96 01       	movw	r18, r12
 b4e:	0e 94 a4 09 	call	0x1348	; 0x1348 <__addsf3>
 b52:	0e 94 39 08 	call	0x1072	; 0x1072 <__fixunssfsi>
	
	return comp_hum;
}
 b56:	cb 01       	movw	r24, r22
 b58:	df 91       	pop	r29
 b5a:	cf 91       	pop	r28
 b5c:	ff 90       	pop	r15
 b5e:	ef 90       	pop	r14
 b60:	df 90       	pop	r13
 b62:	cf 90       	pop	r12
 b64:	08 95       	ret

Disassembly of section .text.MS8607_pressure_temp_calc:

00000160 <MS8607_pressure_temp_calc>:
	
	//calc compensated humidity
	comp_hum = (hum + (25 - TEMP_F) * (float)(-0.15));
	
	return comp_hum;
}
 160:	2f 92       	push	r2
 162:	3f 92       	push	r3
 164:	4f 92       	push	r4
 166:	5f 92       	push	r5
 168:	6f 92       	push	r6
 16a:	7f 92       	push	r7
 16c:	8f 92       	push	r8
 16e:	9f 92       	push	r9
 170:	af 92       	push	r10
 172:	bf 92       	push	r11
 174:	cf 92       	push	r12
 176:	df 92       	push	r13
 178:	ef 92       	push	r14
 17a:	ff 92       	push	r15
 17c:	0f 93       	push	r16
 17e:	1f 93       	push	r17
 180:	cf 93       	push	r28
 182:	df 93       	push	r29
 184:	cd b7       	in	r28, 0x3d	; 61
 186:	de b7       	in	r29, 0x3e	; 62
 188:	c4 54       	subi	r28, 0x44	; 68
 18a:	d1 09       	sbc	r29, r1
 18c:	cd bf       	out	0x3d, r28	; 61
 18e:	de bf       	out	0x3e, r29	; 62
 190:	6c a7       	std	Y+44, r22	; 0x2c
 192:	7d a7       	std	Y+45, r23	; 0x2d
 194:	8e a7       	std	Y+46, r24	; 0x2e
 196:	9f a7       	std	Y+47, r25	; 0x2f
 198:	09 8b       	std	Y+17, r16	; 0x11
 19a:	1a 8b       	std	Y+18, r17	; 0x12
 19c:	eb 8a       	std	Y+19, r14	; 0x13
 19e:	fc 8a       	std	Y+20, r15	; 0x14
 1a0:	cd 8a       	std	Y+21, r12	; 0x15
 1a2:	de 8a       	std	Y+22, r13	; 0x16
 1a4:	af 8a       	std	Y+23, r10	; 0x17
 1a6:	b8 8e       	std	Y+24, r11	; 0x18
 1a8:	a1 2c       	mov	r10, r1
 1aa:	b1 2c       	mov	r11, r1
 1ac:	ba 2c       	mov	r11, r10
 1ae:	a9 2c       	mov	r10, r9
 1b0:	98 2c       	mov	r9, r8
 1b2:	88 24       	eor	r8, r8
 1b4:	69 01       	movw	r12, r18
 1b6:	7a 01       	movw	r14, r20
 1b8:	c8 18       	sub	r12, r8
 1ba:	d9 08       	sbc	r13, r9
 1bc:	ea 08       	sbc	r14, r10
 1be:	fb 08       	sbc	r15, r11
 1c0:	c9 82       	std	Y+1, r12	; 0x01
 1c2:	da 82       	std	Y+2, r13	; 0x02
 1c4:	eb 82       	std	Y+3, r14	; 0x03
 1c6:	fc 82       	std	Y+4, r15	; 0x04
 1c8:	26 01       	movw	r4, r12
 1ca:	37 01       	movw	r6, r14
 1cc:	77 0c       	add	r7, r7
 1ce:	44 08       	sbc	r4, r4
 1d0:	54 2c       	mov	r5, r4
 1d2:	32 01       	movw	r6, r4
 1d4:	6b 96       	adiw	r28, 0x1b	; 27
 1d6:	0e ad       	ldd	r16, Y+62	; 0x3e
 1d8:	1f ad       	ldd	r17, Y+63	; 0x3f
 1da:	6b 97       	sbiw	r28, 0x1b	; 27
 1dc:	a0 2e       	mov	r10, r16
 1de:	b1 2e       	mov	r11, r17
 1e0:	c1 2c       	mov	r12, r1
 1e2:	d1 2c       	mov	r13, r1
 1e4:	e1 2c       	mov	r14, r1
 1e6:	f1 2c       	mov	r15, r1
 1e8:	00 e0       	ldi	r16, 0x00	; 0
 1ea:	10 e0       	ldi	r17, 0x00	; 0
 1ec:	29 81       	ldd	r18, Y+1	; 0x01
 1ee:	3a 81       	ldd	r19, Y+2	; 0x02
 1f0:	4b 81       	ldd	r20, Y+3	; 0x03
 1f2:	5c 81       	ldd	r21, Y+4	; 0x04
 1f4:	64 2d       	mov	r22, r4
 1f6:	74 2d       	mov	r23, r4
 1f8:	84 2d       	mov	r24, r4
 1fa:	94 2d       	mov	r25, r4
 1fc:	0e 94 f3 06 	call	0xde6	; 0xde6 <__muldi3>
 200:	07 e1       	ldi	r16, 0x17	; 23
 202:	0e 94 cf 08 	call	0x119e	; 0x119e <__ashrdi3>
 206:	82 2e       	mov	r8, r18
 208:	93 2e       	mov	r9, r19
 20a:	a4 2e       	mov	r10, r20
 20c:	b5 2e       	mov	r11, r21
 20e:	95 01       	movw	r18, r10
 210:	84 01       	movw	r16, r8
 212:	00 53       	subi	r16, 0x30	; 48
 214:	18 4f       	sbci	r17, 0xF8	; 248
 216:	2f 4f       	sbci	r18, 0xFF	; 255
 218:	3f 4f       	sbci	r19, 0xFF	; 255
 21a:	09 87       	std	Y+9, r16	; 0x09
 21c:	1a 87       	std	Y+10, r17	; 0x0a
 21e:	2b 87       	std	Y+11, r18	; 0x0b
 220:	3c 87       	std	Y+12, r19	; 0x0c
 222:	00 3d       	cpi	r16, 0xD0	; 208
 224:	17 40       	sbci	r17, 0x07	; 7
 226:	21 05       	cpc	r18, r1
 228:	31 05       	cpc	r19, r1
 22a:	0c f0       	brlt	.+2      	; 0x22e <__EEPROM_REGION_LENGTH__+0x2e>
 22c:	c9 c1       	rjmp	.+914    	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 22e:	a9 80       	ldd	r10, Y+1	; 0x01
 230:	ba 80       	ldd	r11, Y+2	; 0x02
 232:	cb 80       	ldd	r12, Y+3	; 0x03
 234:	dc 80       	ldd	r13, Y+4	; 0x04
 236:	e4 2c       	mov	r14, r4
 238:	f4 2c       	mov	r15, r4
 23a:	04 2d       	mov	r16, r4
 23c:	14 2d       	mov	r17, r4
 23e:	2a 2d       	mov	r18, r10
 240:	3b 2d       	mov	r19, r11
 242:	4c 2d       	mov	r20, r12
 244:	5d 2d       	mov	r21, r13
 246:	64 2d       	mov	r22, r4
 248:	74 2d       	mov	r23, r4
 24a:	84 2d       	mov	r24, r4
 24c:	94 2d       	mov	r25, r4
 24e:	0e 94 f3 06 	call	0xde6	; 0xde6 <__muldi3>
 252:	a2 2e       	mov	r10, r18
 254:	b3 2e       	mov	r11, r19
 256:	c4 2e       	mov	r12, r20
 258:	d5 2e       	mov	r13, r21
 25a:	e6 2e       	mov	r14, r22
 25c:	f7 2e       	mov	r15, r23
 25e:	e8 2f       	mov	r30, r24
 260:	19 2f       	mov	r17, r25
 262:	01 e0       	ldi	r16, 0x01	; 1
 264:	0e 94 ed 08 	call	0x11da	; 0x11da <__ashldi3>
 268:	0e 2f       	mov	r16, r30
 26a:	0e 94 91 09 	call	0x1322	; 0x1322 <__adddi3>
 26e:	01 e2       	ldi	r16, 0x21	; 33
 270:	0e 94 cf 08 	call	0x119e	; 0x119e <__ashrdi3>
 274:	29 8f       	std	Y+25, r18	; 0x19
 276:	3a 8f       	std	Y+26, r19	; 0x1a
 278:	4b 8f       	std	Y+27, r20	; 0x1b
 27a:	58 ab       	std	Y+48, r21	; 0x30
 27c:	69 ab       	std	Y+49, r22	; 0x31
 27e:	7a ab       	std	Y+50, r23	; 0x32
 280:	8b ab       	std	Y+51, r24	; 0x33
 282:	9c ab       	std	Y+52, r25	; 0x34
 284:	a9 84       	ldd	r10, Y+9	; 0x09
 286:	ba 84       	ldd	r11, Y+10	; 0x0a
 288:	cb 84       	ldd	r12, Y+11	; 0x0b
 28a:	dc 84       	ldd	r13, Y+12	; 0x0c
 28c:	dd 0c       	add	r13, r13
 28e:	aa 08       	sbc	r10, r10
 290:	ba 2c       	mov	r11, r10
 292:	65 01       	movw	r12, r10
 294:	ad 86       	std	Y+13, r10	; 0x0d
 296:	be 86       	std	Y+14, r11	; 0x0e
 298:	cf 86       	std	Y+15, r12	; 0x0f
 29a:	d8 8a       	std	Y+16, r13	; 0x10
 29c:	29 85       	ldd	r18, Y+9	; 0x09
 29e:	3a 85       	ldd	r19, Y+10	; 0x0a
 2a0:	4b 85       	ldd	r20, Y+11	; 0x0b
 2a2:	5c 85       	ldd	r21, Y+12	; 0x0c
 2a4:	6d 85       	ldd	r22, Y+13	; 0x0d
 2a6:	76 2f       	mov	r23, r22
 2a8:	86 2f       	mov	r24, r22
 2aa:	96 2f       	mov	r25, r22
 2ac:	20 5d       	subi	r18, 0xD0	; 208
 2ae:	37 40       	sbci	r19, 0x07	; 7
 2b0:	41 09       	sbc	r20, r1
 2b2:	51 09       	sbc	r21, r1
 2b4:	61 09       	sbc	r22, r1
 2b6:	71 09       	sbc	r23, r1
 2b8:	81 09       	sbc	r24, r1
 2ba:	91 09       	sbc	r25, r1
 2bc:	72 2e       	mov	r7, r18
 2be:	83 2e       	mov	r8, r19
 2c0:	94 2e       	mov	r9, r20
 2c2:	45 2e       	mov	r4, r21
 2c4:	56 2e       	mov	r5, r22
 2c6:	67 2e       	mov	r6, r23
 2c8:	28 2e       	mov	r2, r24
 2ca:	39 2e       	mov	r3, r25
 2cc:	02 e0       	ldi	r16, 0x02	; 2
 2ce:	0e 94 ed 08 	call	0x11da	; 0x11da <__ashldi3>
 2d2:	a2 2e       	mov	r10, r18
 2d4:	b3 2e       	mov	r11, r19
 2d6:	c4 2e       	mov	r12, r20
 2d8:	d5 2e       	mov	r13, r21
 2da:	e6 2e       	mov	r14, r22
 2dc:	f7 2e       	mov	r15, r23
 2de:	e8 2f       	mov	r30, r24
 2e0:	19 2f       	mov	r17, r25
 2e2:	04 e0       	ldi	r16, 0x04	; 4
 2e4:	0e 94 ed 08 	call	0x11da	; 0x11da <__ashldi3>
 2e8:	0e 2f       	mov	r16, r30
 2ea:	0e 94 9a 09 	call	0x1334	; 0x1334 <__subdi3>
 2ee:	a7 2c       	mov	r10, r7
 2f0:	b8 2c       	mov	r11, r8
 2f2:	c9 2c       	mov	r12, r9
 2f4:	d4 2c       	mov	r13, r4
 2f6:	e5 2c       	mov	r14, r5
 2f8:	f6 2c       	mov	r15, r6
 2fa:	02 2d       	mov	r16, r2
 2fc:	13 2d       	mov	r17, r3
 2fe:	0e 94 91 09 	call	0x1322	; 0x1322 <__adddi3>
 302:	a2 2e       	mov	r10, r18
 304:	b3 2e       	mov	r11, r19
 306:	c4 2e       	mov	r12, r20
 308:	d5 2e       	mov	r13, r21
 30a:	e6 2e       	mov	r14, r22
 30c:	f7 2e       	mov	r15, r23
 30e:	08 2f       	mov	r16, r24
 310:	19 2f       	mov	r17, r25
 312:	27 2d       	mov	r18, r7
 314:	38 2d       	mov	r19, r8
 316:	49 2d       	mov	r20, r9
 318:	54 2d       	mov	r21, r4
 31a:	65 2d       	mov	r22, r5
 31c:	76 2d       	mov	r23, r6
 31e:	82 2d       	mov	r24, r2
 320:	93 2d       	mov	r25, r3
 322:	0e 94 f3 06 	call	0xde6	; 0xde6 <__muldi3>
 326:	f2 2e       	mov	r15, r18
 328:	03 2f       	mov	r16, r19
 32a:	14 2f       	mov	r17, r20
 32c:	5c 8f       	std	Y+28, r21	; 0x1c
 32e:	6d 8f       	std	Y+29, r22	; 0x1d
 330:	7e 8f       	std	Y+30, r23	; 0x1e
 332:	8f 8f       	std	Y+31, r24	; 0x1f
 334:	98 a3       	std	Y+32, r25	; 0x20
 336:	a0 e0       	ldi	r26, 0x00	; 0
 338:	0e 94 66 09 	call	0x12cc	; 0x12cc <__cmpdi2_s8>
 33c:	5c f4       	brge	.+22     	; 0x354 <__EEPROM_REGION_LENGTH__+0x154>
 33e:	af e0       	ldi	r26, 0x0F	; 15
 340:	0e 94 5a 09 	call	0x12b4	; 0x12b4 <__adddi3_s8>
 344:	f2 2e       	mov	r15, r18
 346:	03 2f       	mov	r16, r19
 348:	14 2f       	mov	r17, r20
 34a:	5c 8f       	std	Y+28, r21	; 0x1c
 34c:	6d 8f       	std	Y+29, r22	; 0x1d
 34e:	7e 8f       	std	Y+30, r23	; 0x1e
 350:	8f 8f       	std	Y+31, r24	; 0x1f
 352:	98 a3       	std	Y+32, r25	; 0x20
 354:	2f 2d       	mov	r18, r15
 356:	30 2f       	mov	r19, r16
 358:	41 2f       	mov	r20, r17
 35a:	5c 8d       	ldd	r21, Y+28	; 0x1c
 35c:	6d 8d       	ldd	r22, Y+29	; 0x1d
 35e:	7e 8d       	ldd	r23, Y+30	; 0x1e
 360:	8f 8d       	ldd	r24, Y+31	; 0x1f
 362:	98 a1       	ldd	r25, Y+32	; 0x20
 364:	04 e0       	ldi	r16, 0x04	; 4
 366:	0e 94 cf 08 	call	0x119e	; 0x119e <__ashrdi3>
 36a:	2d ab       	std	Y+53, r18	; 0x35
 36c:	3e ab       	std	Y+54, r19	; 0x36
 36e:	4f ab       	std	Y+55, r20	; 0x37
 370:	58 af       	std	Y+56, r21	; 0x38
 372:	69 af       	std	Y+57, r22	; 0x39
 374:	7a af       	std	Y+58, r23	; 0x3a
 376:	8b af       	std	Y+59, r24	; 0x3b
 378:	9c af       	std	Y+60, r25	; 0x3c
 37a:	2c 8f       	std	Y+28, r18	; 0x1c
 37c:	3d 8f       	std	Y+29, r19	; 0x1d
 37e:	4e 8f       	std	Y+30, r20	; 0x1e
 380:	5f 8f       	std	Y+31, r21	; 0x1f
 382:	68 a3       	std	Y+32, r22	; 0x20
 384:	79 a3       	std	Y+33, r23	; 0x21
 386:	8a a3       	std	Y+34, r24	; 0x22
 388:	9b a3       	std	Y+35, r25	; 0x23
 38a:	27 2d       	mov	r18, r7
 38c:	38 2d       	mov	r19, r8
 38e:	49 2d       	mov	r20, r9
 390:	54 2d       	mov	r21, r4
 392:	65 2d       	mov	r22, r5
 394:	76 2d       	mov	r23, r6
 396:	82 2d       	mov	r24, r2
 398:	93 2d       	mov	r25, r3
 39a:	02 e0       	ldi	r16, 0x02	; 2
 39c:	0e 94 ed 08 	call	0x11da	; 0x11da <__ashldi3>
 3a0:	a2 2e       	mov	r10, r18
 3a2:	b3 2e       	mov	r11, r19
 3a4:	c4 2e       	mov	r12, r20
 3a6:	d5 2e       	mov	r13, r21
 3a8:	e6 2e       	mov	r14, r22
 3aa:	f7 2e       	mov	r15, r23
 3ac:	e8 2f       	mov	r30, r24
 3ae:	19 2f       	mov	r17, r25
 3b0:	03 e0       	ldi	r16, 0x03	; 3
 3b2:	0e 94 ed 08 	call	0x11da	; 0x11da <__ashldi3>
 3b6:	0e 2f       	mov	r16, r30
 3b8:	0e 94 9a 09 	call	0x1334	; 0x1334 <__subdi3>
 3bc:	a7 2c       	mov	r10, r7
 3be:	b8 2c       	mov	r11, r8
 3c0:	c9 2c       	mov	r12, r9
 3c2:	d4 2c       	mov	r13, r4
 3c4:	e5 2c       	mov	r14, r5
 3c6:	f6 2c       	mov	r15, r6
 3c8:	02 2d       	mov	r16, r2
 3ca:	13 2d       	mov	r17, r3
 3cc:	0e 94 91 09 	call	0x1322	; 0x1322 <__adddi3>
 3d0:	a2 2e       	mov	r10, r18
 3d2:	b3 2e       	mov	r11, r19
 3d4:	c4 2e       	mov	r12, r20
 3d6:	d5 2e       	mov	r13, r21
 3d8:	e6 2e       	mov	r14, r22
 3da:	f7 2e       	mov	r15, r23
 3dc:	08 2f       	mov	r16, r24
 3de:	19 2f       	mov	r17, r25
 3e0:	27 2d       	mov	r18, r7
 3e2:	38 2d       	mov	r19, r8
 3e4:	49 2d       	mov	r20, r9
 3e6:	54 2d       	mov	r21, r4
 3e8:	65 2d       	mov	r22, r5
 3ea:	76 2d       	mov	r23, r6
 3ec:	82 2d       	mov	r24, r2
 3ee:	93 2d       	mov	r25, r3
 3f0:	0e 94 f3 06 	call	0xde6	; 0xde6 <__muldi3>
 3f4:	f2 2e       	mov	r15, r18
 3f6:	03 2f       	mov	r16, r19
 3f8:	14 2f       	mov	r17, r20
 3fa:	b5 2f       	mov	r27, r21
 3fc:	f6 2f       	mov	r31, r22
 3fe:	e7 2f       	mov	r30, r23
 400:	58 2e       	mov	r5, r24
 402:	69 2e       	mov	r6, r25
 404:	a0 e0       	ldi	r26, 0x00	; 0
 406:	0e 94 66 09 	call	0x12cc	; 0x12cc <__cmpdi2_s8>
 40a:	5c f4       	brge	.+22     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 40c:	af e0       	ldi	r26, 0x0F	; 15
 40e:	0e 94 5a 09 	call	0x12b4	; 0x12b4 <__adddi3_s8>
 412:	f2 2e       	mov	r15, r18
 414:	03 2f       	mov	r16, r19
 416:	14 2f       	mov	r17, r20
 418:	b5 2f       	mov	r27, r21
 41a:	f6 2f       	mov	r31, r22
 41c:	e7 2f       	mov	r30, r23
 41e:	58 2e       	mov	r5, r24
 420:	69 2e       	mov	r6, r25
 422:	2f 2d       	mov	r18, r15
 424:	30 2f       	mov	r19, r16
 426:	41 2f       	mov	r20, r17
 428:	5b 2f       	mov	r21, r27
 42a:	6f 2f       	mov	r22, r31
 42c:	7e 2f       	mov	r23, r30
 42e:	85 2d       	mov	r24, r5
 430:	96 2d       	mov	r25, r6
 432:	04 e0       	ldi	r16, 0x04	; 4
 434:	0e 94 cf 08 	call	0x119e	; 0x119e <__ashrdi3>
 438:	2d af       	std	Y+61, r18	; 0x3d
 43a:	3e af       	std	Y+62, r19	; 0x3e
 43c:	4f af       	std	Y+63, r20	; 0x3f
 43e:	21 96       	adiw	r28, 0x01	; 1
 440:	5f af       	std	Y+63, r21	; 0x3f
 442:	21 97       	sbiw	r28, 0x01	; 1
 444:	22 96       	adiw	r28, 0x02	; 2
 446:	6f af       	std	Y+63, r22	; 0x3f
 448:	22 97       	sbiw	r28, 0x02	; 2
 44a:	23 96       	adiw	r28, 0x03	; 3
 44c:	7f af       	std	Y+63, r23	; 0x3f
 44e:	23 97       	sbiw	r28, 0x03	; 3
 450:	24 96       	adiw	r28, 0x04	; 4
 452:	8f af       	std	Y+63, r24	; 0x3f
 454:	24 97       	sbiw	r28, 0x04	; 4
 456:	25 96       	adiw	r28, 0x05	; 5
 458:	9f af       	std	Y+63, r25	; 0x3f
 45a:	25 97       	sbiw	r28, 0x05	; 5
 45c:	2c a3       	std	Y+36, r18	; 0x24
 45e:	3d a3       	std	Y+37, r19	; 0x25
 460:	4e a3       	std	Y+38, r20	; 0x26
 462:	5f a3       	std	Y+39, r21	; 0x27
 464:	68 a7       	std	Y+40, r22	; 0x28
 466:	79 a7       	std	Y+41, r23	; 0x29
 468:	8a a7       	std	Y+42, r24	; 0x2a
 46a:	9b a7       	std	Y+43, r25	; 0x2b
 46c:	c9 84       	ldd	r12, Y+9	; 0x09
 46e:	da 84       	ldd	r13, Y+10	; 0x0a
 470:	eb 84       	ldd	r14, Y+11	; 0x0b
 472:	fc 84       	ldd	r15, Y+12	; 0x0c
 474:	04 e2       	ldi	r16, 0x24	; 36
 476:	c0 16       	cp	r12, r16
 478:	0a ef       	ldi	r16, 0xFA	; 250
 47a:	d0 06       	cpc	r13, r16
 47c:	0f ef       	ldi	r16, 0xFF	; 255
 47e:	e0 06       	cpc	r14, r16
 480:	f0 06       	cpc	r15, r16
 482:	0c f0       	brlt	.+2      	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 484:	d8 c0       	rjmp	.+432    	; 0x636 <__LOCK_REGION_LENGTH__+0x236>
 486:	29 85       	ldd	r18, Y+9	; 0x09
 488:	3a 85       	ldd	r19, Y+10	; 0x0a
 48a:	4b 85       	ldd	r20, Y+11	; 0x0b
 48c:	5c 85       	ldd	r21, Y+12	; 0x0c
 48e:	6d 85       	ldd	r22, Y+13	; 0x0d
 490:	76 2f       	mov	r23, r22
 492:	86 2f       	mov	r24, r22
 494:	96 2f       	mov	r25, r22
 496:	24 52       	subi	r18, 0x24	; 36
 498:	3a 4f       	sbci	r19, 0xFA	; 250
 49a:	4f 4f       	sbci	r20, 0xFF	; 255
 49c:	5f 4f       	sbci	r21, 0xFF	; 255
 49e:	6f 4f       	sbci	r22, 0xFF	; 255
 4a0:	7f 4f       	sbci	r23, 0xFF	; 255
 4a2:	8f 4f       	sbci	r24, 0xFF	; 255
 4a4:	9f 4f       	sbci	r25, 0xFF	; 255
 4a6:	62 2e       	mov	r6, r18
 4a8:	73 2e       	mov	r7, r19
 4aa:	84 2e       	mov	r8, r20
 4ac:	95 2e       	mov	r9, r21
 4ae:	56 2e       	mov	r5, r22
 4b0:	47 2e       	mov	r4, r23
 4b2:	38 2e       	mov	r3, r24
 4b4:	29 2e       	mov	r2, r25
 4b6:	04 e0       	ldi	r16, 0x04	; 4
 4b8:	0e 94 ed 08 	call	0x11da	; 0x11da <__ashldi3>
 4bc:	a6 2c       	mov	r10, r6
 4be:	b7 2c       	mov	r11, r7
 4c0:	c8 2c       	mov	r12, r8
 4c2:	d9 2c       	mov	r13, r9
 4c4:	e5 2c       	mov	r14, r5
 4c6:	f4 2c       	mov	r15, r4
 4c8:	03 2d       	mov	r16, r3
 4ca:	12 2d       	mov	r17, r2
 4cc:	0e 94 91 09 	call	0x1322	; 0x1322 <__adddi3>
 4d0:	a2 2e       	mov	r10, r18
 4d2:	b3 2e       	mov	r11, r19
 4d4:	c4 2e       	mov	r12, r20
 4d6:	d5 2e       	mov	r13, r21
 4d8:	e6 2e       	mov	r14, r22
 4da:	f7 2e       	mov	r15, r23
 4dc:	08 2f       	mov	r16, r24
 4de:	19 2f       	mov	r17, r25
 4e0:	26 2d       	mov	r18, r6
 4e2:	37 2d       	mov	r19, r7
 4e4:	48 2d       	mov	r20, r8
 4e6:	59 2d       	mov	r21, r9
 4e8:	65 2d       	mov	r22, r5
 4ea:	74 2d       	mov	r23, r4
 4ec:	83 2d       	mov	r24, r3
 4ee:	92 2d       	mov	r25, r2
 4f0:	0e 94 f3 06 	call	0xde6	; 0xde6 <__muldi3>
 4f4:	a2 2e       	mov	r10, r18
 4f6:	b3 2e       	mov	r11, r19
 4f8:	c4 2e       	mov	r12, r20
 4fa:	d5 2e       	mov	r13, r21
 4fc:	e6 2e       	mov	r14, r22
 4fe:	f7 2e       	mov	r15, r23
 500:	08 2f       	mov	r16, r24
 502:	19 2f       	mov	r17, r25
 504:	2d a9       	ldd	r18, Y+53	; 0x35
 506:	3e a9       	ldd	r19, Y+54	; 0x36
 508:	4f a9       	ldd	r20, Y+55	; 0x37
 50a:	58 ad       	ldd	r21, Y+56	; 0x38
 50c:	69 ad       	ldd	r22, Y+57	; 0x39
 50e:	7a ad       	ldd	r23, Y+58	; 0x3a
 510:	8b ad       	ldd	r24, Y+59	; 0x3b
 512:	9c ad       	ldd	r25, Y+60	; 0x3c
 514:	0e 94 91 09 	call	0x1322	; 0x1322 <__adddi3>
 518:	2c 8f       	std	Y+28, r18	; 0x1c
 51a:	3d 8f       	std	Y+29, r19	; 0x1d
 51c:	4e 8f       	std	Y+30, r20	; 0x1e
 51e:	5f 8f       	std	Y+31, r21	; 0x1f
 520:	68 a3       	std	Y+32, r22	; 0x20
 522:	79 a3       	std	Y+33, r23	; 0x21
 524:	8a a3       	std	Y+34, r24	; 0x22
 526:	9b a3       	std	Y+35, r25	; 0x23
 528:	26 2d       	mov	r18, r6
 52a:	37 2d       	mov	r19, r7
 52c:	48 2d       	mov	r20, r8
 52e:	59 2d       	mov	r21, r9
 530:	65 2d       	mov	r22, r5
 532:	74 2d       	mov	r23, r4
 534:	83 2d       	mov	r24, r3
 536:	92 2d       	mov	r25, r2
 538:	03 e0       	ldi	r16, 0x03	; 3
 53a:	0e 94 ed 08 	call	0x11da	; 0x11da <__ashldi3>
 53e:	a6 2c       	mov	r10, r6
 540:	b7 2c       	mov	r11, r7
 542:	c8 2c       	mov	r12, r8
 544:	d9 2c       	mov	r13, r9
 546:	e5 2c       	mov	r14, r5
 548:	f4 2c       	mov	r15, r4
 54a:	03 2d       	mov	r16, r3
 54c:	12 2d       	mov	r17, r2
 54e:	0e 94 91 09 	call	0x1322	; 0x1322 <__adddi3>
 552:	a2 2e       	mov	r10, r18
 554:	b3 2e       	mov	r11, r19
 556:	c4 2e       	mov	r12, r20
 558:	d5 2e       	mov	r13, r21
 55a:	e6 2e       	mov	r14, r22
 55c:	f7 2e       	mov	r15, r23
 55e:	08 2f       	mov	r16, r24
 560:	19 2f       	mov	r17, r25
 562:	26 2d       	mov	r18, r6
 564:	37 2d       	mov	r19, r7
 566:	48 2d       	mov	r20, r8
 568:	59 2d       	mov	r21, r9
 56a:	65 2d       	mov	r22, r5
 56c:	74 2d       	mov	r23, r4
 56e:	83 2d       	mov	r24, r3
 570:	92 2d       	mov	r25, r2
 572:	0e 94 f3 06 	call	0xde6	; 0xde6 <__muldi3>
 576:	a2 2e       	mov	r10, r18
 578:	b3 2e       	mov	r11, r19
 57a:	c4 2e       	mov	r12, r20
 57c:	d5 2e       	mov	r13, r21
 57e:	e6 2e       	mov	r14, r22
 580:	f7 2e       	mov	r15, r23
 582:	08 2f       	mov	r16, r24
 584:	19 2f       	mov	r17, r25
 586:	2d ad       	ldd	r18, Y+61	; 0x3d
 588:	3e ad       	ldd	r19, Y+62	; 0x3e
 58a:	4f ad       	ldd	r20, Y+63	; 0x3f
 58c:	21 96       	adiw	r28, 0x01	; 1
 58e:	5f ad       	ldd	r21, Y+63	; 0x3f
 590:	21 97       	sbiw	r28, 0x01	; 1
 592:	22 96       	adiw	r28, 0x02	; 2
 594:	6f ad       	ldd	r22, Y+63	; 0x3f
 596:	22 97       	sbiw	r28, 0x02	; 2
 598:	23 96       	adiw	r28, 0x03	; 3
 59a:	7f ad       	ldd	r23, Y+63	; 0x3f
 59c:	23 97       	sbiw	r28, 0x03	; 3
 59e:	24 96       	adiw	r28, 0x04	; 4
 5a0:	8f ad       	ldd	r24, Y+63	; 0x3f
 5a2:	24 97       	sbiw	r28, 0x04	; 4
 5a4:	25 96       	adiw	r28, 0x05	; 5
 5a6:	9f ad       	ldd	r25, Y+63	; 0x3f
 5a8:	25 97       	sbiw	r28, 0x05	; 5
 5aa:	0e 94 91 09 	call	0x1322	; 0x1322 <__adddi3>
 5ae:	2c a3       	std	Y+36, r18	; 0x24
 5b0:	3d a3       	std	Y+37, r19	; 0x25
 5b2:	4e a3       	std	Y+38, r20	; 0x26
 5b4:	5f a3       	std	Y+39, r21	; 0x27
 5b6:	68 a7       	std	Y+40, r22	; 0x28
 5b8:	79 a7       	std	Y+41, r23	; 0x29
 5ba:	8a a7       	std	Y+42, r24	; 0x2a
 5bc:	9b a7       	std	Y+43, r25	; 0x2b
 5be:	3b c0       	rjmp	.+118    	; 0x636 <__LOCK_REGION_LENGTH__+0x236>
 5c0:	a9 80       	ldd	r10, Y+1	; 0x01
 5c2:	ba 80       	ldd	r11, Y+2	; 0x02
 5c4:	cb 80       	ldd	r12, Y+3	; 0x03
 5c6:	dc 80       	ldd	r13, Y+4	; 0x04
 5c8:	e4 2c       	mov	r14, r4
 5ca:	f4 2c       	mov	r15, r4
 5cc:	04 2d       	mov	r16, r4
 5ce:	14 2d       	mov	r17, r4
 5d0:	2a 2d       	mov	r18, r10
 5d2:	3b 2d       	mov	r19, r11
 5d4:	4c 2d       	mov	r20, r12
 5d6:	5d 2d       	mov	r21, r13
 5d8:	64 2d       	mov	r22, r4
 5da:	74 2d       	mov	r23, r4
 5dc:	84 2d       	mov	r24, r4
 5de:	94 2d       	mov	r25, r4
 5e0:	0e 94 f3 06 	call	0xde6	; 0xde6 <__muldi3>
 5e4:	a2 2e       	mov	r10, r18
 5e6:	b3 2e       	mov	r11, r19
 5e8:	c4 2e       	mov	r12, r20
 5ea:	d5 2e       	mov	r13, r21
 5ec:	e6 2e       	mov	r14, r22
 5ee:	f7 2e       	mov	r15, r23
 5f0:	e8 2f       	mov	r30, r24
 5f2:	19 2f       	mov	r17, r25
 5f4:	02 e0       	ldi	r16, 0x02	; 2
 5f6:	0e 94 ed 08 	call	0x11da	; 0x11da <__ashldi3>
 5fa:	0e 2f       	mov	r16, r30
 5fc:	0e 94 91 09 	call	0x1322	; 0x1322 <__adddi3>
 600:	06 e2       	ldi	r16, 0x26	; 38
 602:	0e 94 cf 08 	call	0x119e	; 0x119e <__ashrdi3>
 606:	29 8f       	std	Y+25, r18	; 0x19
 608:	3a 8f       	std	Y+26, r19	; 0x1a
 60a:	4b 8f       	std	Y+27, r20	; 0x1b
 60c:	58 ab       	std	Y+48, r21	; 0x30
 60e:	69 ab       	std	Y+49, r22	; 0x31
 610:	7a ab       	std	Y+50, r23	; 0x32
 612:	8b ab       	std	Y+51, r24	; 0x33
 614:	9c ab       	std	Y+52, r25	; 0x34
 616:	1c a2       	std	Y+36, r1	; 0x24
 618:	1d a2       	std	Y+37, r1	; 0x25
 61a:	1e a2       	std	Y+38, r1	; 0x26
 61c:	1f a2       	std	Y+39, r1	; 0x27
 61e:	18 a6       	std	Y+40, r1	; 0x28
 620:	19 a6       	std	Y+41, r1	; 0x29
 622:	1a a6       	std	Y+42, r1	; 0x2a
 624:	1b a6       	std	Y+43, r1	; 0x2b
 626:	1c 8e       	std	Y+28, r1	; 0x1c
 628:	1d 8e       	std	Y+29, r1	; 0x1d
 62a:	1e 8e       	std	Y+30, r1	; 0x1e
 62c:	1f 8e       	std	Y+31, r1	; 0x1f
 62e:	18 a2       	std	Y+32, r1	; 0x20
 630:	19 a2       	std	Y+33, r1	; 0x21
 632:	1a a2       	std	Y+34, r1	; 0x22
 634:	1b a2       	std	Y+35, r1	; 0x23
 636:	69 85       	ldd	r22, Y+9	; 0x09
 638:	7a 85       	ldd	r23, Y+10	; 0x0a
 63a:	8b 85       	ldd	r24, Y+11	; 0x0b
 63c:	9c 85       	ldd	r25, Y+12	; 0x0c
 63e:	0e 94 fe 07 	call	0xffc	; 0xffc <__floatsisf>
 642:	6b 01       	movw	r12, r22
 644:	7c 01       	movw	r14, r24
 646:	29 8d       	ldd	r18, Y+25	; 0x19
 648:	3a 8d       	ldd	r19, Y+26	; 0x1a
 64a:	4b 8d       	ldd	r20, Y+27	; 0x1b
 64c:	58 a9       	ldd	r21, Y+48	; 0x30
 64e:	69 a9       	ldd	r22, Y+49	; 0x31
 650:	7a a9       	ldd	r23, Y+50	; 0x32
 652:	8b a9       	ldd	r24, Y+51	; 0x33
 654:	9c a9       	ldd	r25, Y+52	; 0x34
 656:	0e 94 bf 09 	call	0x137e	; 0x137e <__floatdisf>
 65a:	9b 01       	movw	r18, r22
 65c:	ac 01       	movw	r20, r24
 65e:	c7 01       	movw	r24, r14
 660:	b6 01       	movw	r22, r12
 662:	0e 94 a3 09 	call	0x1346	; 0x1346 <__subsf3>
 666:	20 e0       	ldi	r18, 0x00	; 0
 668:	30 e0       	ldi	r19, 0x00	; 0
 66a:	48 ec       	ldi	r20, 0xC8	; 200
 66c:	52 e4       	ldi	r21, 0x42	; 66
 66e:	0e 94 cb 09 	call	0x1396	; 0x1396 <__divsf3>
 672:	60 93 27 40 	sts	0x4027, r22	; 0x804027 <TEMP_F>
 676:	70 93 28 40 	sts	0x4028, r23	; 0x804028 <TEMP_F+0x1>
 67a:	80 93 29 40 	sts	0x4029, r24	; 0x804029 <TEMP_F+0x2>
 67e:	90 93 2a 40 	sts	0x402A, r25	; 0x80402a <TEMP_F+0x3>
 682:	2b 89       	ldd	r18, Y+19	; 0x13
 684:	3c 89       	ldd	r19, Y+20	; 0x14
 686:	49 01       	movw	r8, r18
 688:	39 2d       	mov	r19, r9
 68a:	40 e0       	ldi	r20, 0x00	; 0
 68c:	50 e0       	ldi	r21, 0x00	; 0
 68e:	60 e0       	ldi	r22, 0x00	; 0
 690:	70 e0       	ldi	r23, 0x00	; 0
 692:	80 e0       	ldi	r24, 0x00	; 0
 694:	90 e0       	ldi	r25, 0x00	; 0
 696:	01 e1       	ldi	r16, 0x11	; 17
 698:	0e 94 ed 08 	call	0x11da	; 0x11da <__ashldi3>
 69c:	82 2e       	mov	r8, r18
 69e:	93 2e       	mov	r9, r19
 6a0:	a4 2e       	mov	r10, r20
 6a2:	b5 2e       	mov	r11, r21
 6a4:	c6 2e       	mov	r12, r22
 6a6:	d7 2e       	mov	r13, r23
 6a8:	f8 2f       	mov	r31, r24
 6aa:	e9 2f       	mov	r30, r25
 6ac:	af 89       	ldd	r26, Y+23	; 0x17
 6ae:	b8 8d       	ldd	r27, Y+24	; 0x18
 6b0:	29 81       	ldd	r18, Y+1	; 0x01
 6b2:	3a 81       	ldd	r19, Y+2	; 0x02
 6b4:	4b 81       	ldd	r20, Y+3	; 0x03
 6b6:	5c 81       	ldd	r21, Y+4	; 0x04
 6b8:	0e 94 72 09 	call	0x12e4	; 0x12e4 <__muluhisi3>
 6bc:	7b 01       	movw	r14, r22
 6be:	8c 01       	movw	r16, r24
 6c0:	68 94       	set
 6c2:	15 f8       	bld	r1, 5
 6c4:	15 95       	asr	r17
 6c6:	07 95       	ror	r16
 6c8:	f7 94       	ror	r15
 6ca:	e7 94       	ror	r14
 6cc:	16 94       	lsr	r1
 6ce:	d1 f7       	brne	.-12     	; 0x6c4 <__LOCK_REGION_LENGTH__+0x2c4>
 6d0:	2b 01       	movw	r4, r22
 6d2:	3c 01       	movw	r6, r24
 6d4:	77 0c       	add	r7, r7
 6d6:	44 08       	sbc	r4, r4
 6d8:	54 2c       	mov	r5, r4
 6da:	32 01       	movw	r6, r4
 6dc:	28 2d       	mov	r18, r8
 6de:	39 2d       	mov	r19, r9
 6e0:	4a 2d       	mov	r20, r10
 6e2:	5b 2d       	mov	r21, r11
 6e4:	6c 2d       	mov	r22, r12
 6e6:	7d 2d       	mov	r23, r13
 6e8:	8f 2f       	mov	r24, r31
 6ea:	9e 2f       	mov	r25, r30
 6ec:	ae 2c       	mov	r10, r14
 6ee:	bf 2c       	mov	r11, r15
 6f0:	c0 2e       	mov	r12, r16
 6f2:	d1 2e       	mov	r13, r17
 6f4:	e4 2c       	mov	r14, r4
 6f6:	f4 2c       	mov	r15, r4
 6f8:	04 2d       	mov	r16, r4
 6fa:	14 2d       	mov	r17, r4
 6fc:	0e 94 91 09 	call	0x1322	; 0x1322 <__adddi3>
 700:	82 2e       	mov	r8, r18
 702:	93 2e       	mov	r9, r19
 704:	49 87       	std	Y+9, r20	; 0x09
 706:	5d 87       	std	Y+13, r21	; 0x0d
 708:	6b 8b       	std	Y+19, r22	; 0x13
 70a:	7f 8b       	std	Y+23, r23	; 0x17
 70c:	89 8f       	std	Y+25, r24	; 0x19
 70e:	9a 8f       	std	Y+26, r25	; 0x1a
 710:	a9 88       	ldd	r10, Y+17	; 0x11
 712:	ba 88       	ldd	r11, Y+18	; 0x12
 714:	a5 01       	movw	r20, r10
 716:	2a 2d       	mov	r18, r10
 718:	35 2f       	mov	r19, r21
 71a:	40 e0       	ldi	r20, 0x00	; 0
 71c:	50 e0       	ldi	r21, 0x00	; 0
 71e:	60 e0       	ldi	r22, 0x00	; 0
 720:	70 e0       	ldi	r23, 0x00	; 0
 722:	80 e0       	ldi	r24, 0x00	; 0
 724:	90 e0       	ldi	r25, 0x00	; 0
 726:	00 e1       	ldi	r16, 0x10	; 16
 728:	0e 94 ed 08 	call	0x11da	; 0x11da <__ashldi3>
 72c:	a2 2e       	mov	r10, r18
 72e:	b3 2e       	mov	r11, r19
 730:	c4 2e       	mov	r12, r20
 732:	d5 2e       	mov	r13, r21
 734:	26 2e       	mov	r2, r22
 736:	37 2e       	mov	r3, r23
 738:	f8 2f       	mov	r31, r24
 73a:	e9 2f       	mov	r30, r25
 73c:	ad 89       	ldd	r26, Y+21	; 0x15
 73e:	be 89       	ldd	r27, Y+22	; 0x16
 740:	29 81       	ldd	r18, Y+1	; 0x01
 742:	3a 81       	ldd	r19, Y+2	; 0x02
 744:	4b 81       	ldd	r20, Y+3	; 0x03
 746:	5c 81       	ldd	r21, Y+4	; 0x04
 748:	0e 94 72 09 	call	0x12e4	; 0x12e4 <__muluhisi3>
 74c:	7b 01       	movw	r14, r22
 74e:	8c 01       	movw	r16, r24
 750:	68 94       	set
 752:	16 f8       	bld	r1, 6
 754:	15 95       	asr	r17
 756:	07 95       	ror	r16
 758:	f7 94       	ror	r15
 75a:	e7 94       	ror	r14
 75c:	16 94       	lsr	r1
 75e:	d1 f7       	brne	.-12     	; 0x754 <__LOCK_REGION_LENGTH__+0x354>
 760:	2b 01       	movw	r4, r22
 762:	3c 01       	movw	r6, r24
 764:	77 0c       	add	r7, r7
 766:	44 08       	sbc	r4, r4
 768:	54 2c       	mov	r5, r4
 76a:	32 01       	movw	r6, r4
 76c:	2a 2d       	mov	r18, r10
 76e:	3b 2d       	mov	r19, r11
 770:	4c 2d       	mov	r20, r12
 772:	5d 2d       	mov	r21, r13
 774:	62 2d       	mov	r22, r2
 776:	73 2d       	mov	r23, r3
 778:	8f 2f       	mov	r24, r31
 77a:	9e 2f       	mov	r25, r30
 77c:	ae 2c       	mov	r10, r14
 77e:	bf 2c       	mov	r11, r15
 780:	c0 2e       	mov	r12, r16
 782:	d1 2e       	mov	r13, r17
 784:	e4 2c       	mov	r14, r4
 786:	f4 2c       	mov	r15, r4
 788:	04 2d       	mov	r16, r4
 78a:	14 2d       	mov	r17, r4
 78c:	0e 94 91 09 	call	0x1322	; 0x1322 <__adddi3>
 790:	29 83       	std	Y+1, r18	; 0x01
 792:	39 8b       	std	Y+17, r19	; 0x11
 794:	4d 8b       	std	Y+21, r20	; 0x15
 796:	5b 8f       	std	Y+27, r21	; 0x1b
 798:	b6 2f       	mov	r27, r22
 79a:	a7 2f       	mov	r26, r23
 79c:	f8 2f       	mov	r31, r24
 79e:	e9 2f       	mov	r30, r25
 7a0:	28 2d       	mov	r18, r8
 7a2:	39 2d       	mov	r19, r9
 7a4:	49 85       	ldd	r20, Y+9	; 0x09
 7a6:	5d 85       	ldd	r21, Y+13	; 0x0d
 7a8:	6b 89       	ldd	r22, Y+19	; 0x13
 7aa:	7f 89       	ldd	r23, Y+23	; 0x17
 7ac:	89 8d       	ldd	r24, Y+25	; 0x19
 7ae:	9a 8d       	ldd	r25, Y+26	; 0x1a
 7b0:	ac 8c       	ldd	r10, Y+28	; 0x1c
 7b2:	bd 8c       	ldd	r11, Y+29	; 0x1d
 7b4:	ce 8c       	ldd	r12, Y+30	; 0x1e
 7b6:	df 8c       	ldd	r13, Y+31	; 0x1f
 7b8:	e8 a0       	ldd	r14, Y+32	; 0x20
 7ba:	f9 a0       	ldd	r15, Y+33	; 0x21
 7bc:	0a a1       	ldd	r16, Y+34	; 0x22
 7be:	1b a1       	ldd	r17, Y+35	; 0x23
 7c0:	0e 94 9a 09 	call	0x1334	; 0x1334 <__subdi3>
 7c4:	52 2e       	mov	r5, r18
 7c6:	63 2e       	mov	r6, r19
 7c8:	74 2e       	mov	r7, r20
 7ca:	85 2e       	mov	r8, r21
 7cc:	96 2e       	mov	r9, r22
 7ce:	47 2e       	mov	r4, r23
 7d0:	38 2e       	mov	r3, r24
 7d2:	29 2e       	mov	r2, r25
 7d4:	29 81       	ldd	r18, Y+1	; 0x01
 7d6:	39 89       	ldd	r19, Y+17	; 0x11
 7d8:	4d 89       	ldd	r20, Y+21	; 0x15
 7da:	5b 8d       	ldd	r21, Y+27	; 0x1b
 7dc:	6b 2f       	mov	r22, r27
 7de:	7a 2f       	mov	r23, r26
 7e0:	8f 2f       	mov	r24, r31
 7e2:	9e 2f       	mov	r25, r30
 7e4:	ac a0       	ldd	r10, Y+36	; 0x24
 7e6:	bd a0       	ldd	r11, Y+37	; 0x25
 7e8:	ce a0       	ldd	r12, Y+38	; 0x26
 7ea:	df a0       	ldd	r13, Y+39	; 0x27
 7ec:	e8 a4       	ldd	r14, Y+40	; 0x28
 7ee:	f9 a4       	ldd	r15, Y+41	; 0x29
 7f0:	0a a5       	ldd	r16, Y+42	; 0x2a
 7f2:	1b a5       	ldd	r17, Y+43	; 0x2b
 7f4:	0e 94 9a 09 	call	0x1334	; 0x1334 <__subdi3>
 7f8:	cc a4       	ldd	r12, Y+44	; 0x2c
 7fa:	dd a4       	ldd	r13, Y+45	; 0x2d
 7fc:	ee a4       	ldd	r14, Y+46	; 0x2e
 7fe:	ff a4       	ldd	r15, Y+47	; 0x2f
 800:	56 01       	movw	r10, r12
 802:	67 01       	movw	r12, r14
 804:	e1 2c       	mov	r14, r1
 806:	f1 2c       	mov	r15, r1
 808:	87 01       	movw	r16, r14
 80a:	a9 82       	std	Y+1, r10	; 0x01
 80c:	ba 82       	std	Y+2, r11	; 0x02
 80e:	cb 82       	std	Y+3, r12	; 0x03
 810:	dc 82       	std	Y+4, r13	; 0x04
 812:	ed 82       	std	Y+5, r14	; 0x05
 814:	fe 82       	std	Y+6, r15	; 0x06
 816:	0f 83       	std	Y+7, r16	; 0x07
 818:	18 87       	std	Y+8, r17	; 0x08
 81a:	a2 2e       	mov	r10, r18
 81c:	b3 2e       	mov	r11, r19
 81e:	c4 2e       	mov	r12, r20
 820:	d5 2e       	mov	r13, r21
 822:	e6 2e       	mov	r14, r22
 824:	f7 2e       	mov	r15, r23
 826:	08 2f       	mov	r16, r24
 828:	19 2f       	mov	r17, r25
 82a:	29 81       	ldd	r18, Y+1	; 0x01
 82c:	3a 81       	ldd	r19, Y+2	; 0x02
 82e:	4b 81       	ldd	r20, Y+3	; 0x03
 830:	5c 81       	ldd	r21, Y+4	; 0x04
 832:	60 e0       	ldi	r22, 0x00	; 0
 834:	70 e0       	ldi	r23, 0x00	; 0
 836:	80 e0       	ldi	r24, 0x00	; 0
 838:	90 e0       	ldi	r25, 0x00	; 0
 83a:	0e 94 f3 06 	call	0xde6	; 0xde6 <__muldi3>
 83e:	05 e1       	ldi	r16, 0x15	; 21
 840:	0e 94 cf 08 	call	0x119e	; 0x119e <__ashrdi3>
 844:	a5 2c       	mov	r10, r5
 846:	b6 2c       	mov	r11, r6
 848:	c7 2c       	mov	r12, r7
 84a:	d8 2c       	mov	r13, r8
 84c:	e9 2c       	mov	r14, r9
 84e:	f4 2c       	mov	r15, r4
 850:	03 2d       	mov	r16, r3
 852:	12 2d       	mov	r17, r2
 854:	0e 94 9a 09 	call	0x1334	; 0x1334 <__subdi3>
 858:	0f e0       	ldi	r16, 0x0F	; 15
 85a:	0e 94 cf 08 	call	0x119e	; 0x119e <__ashrdi3>
 85e:	0e 94 bf 09 	call	0x137e	; 0x137e <__floatdisf>
 862:	20 e0       	ldi	r18, 0x00	; 0
 864:	30 e0       	ldi	r19, 0x00	; 0
 866:	48 ec       	ldi	r20, 0xC8	; 200
 868:	52 e4       	ldi	r21, 0x42	; 66
 86a:	0e 94 cb 09 	call	0x1396	; 0x1396 <__divsf3>
 86e:	60 93 10 40 	sts	0x4010, r22	; 0x804010 <P_F>
 872:	70 93 11 40 	sts	0x4011, r23	; 0x804011 <P_F+0x1>
 876:	80 93 12 40 	sts	0x4012, r24	; 0x804012 <P_F+0x2>
 87a:	90 93 13 40 	sts	0x4013, r25	; 0x804013 <P_F+0x3>
 87e:	cc 5b       	subi	r28, 0xBC	; 188
 880:	df 4f       	sbci	r29, 0xFF	; 255
 882:	cd bf       	out	0x3d, r28	; 61
 884:	de bf       	out	0x3e, r29	; 62
 886:	df 91       	pop	r29
 888:	cf 91       	pop	r28
 88a:	1f 91       	pop	r17
 88c:	0f 91       	pop	r16
 88e:	ff 90       	pop	r15
 890:	ef 90       	pop	r14
 892:	df 90       	pop	r13
 894:	cf 90       	pop	r12
 896:	bf 90       	pop	r11
 898:	af 90       	pop	r10
 89a:	9f 90       	pop	r9
 89c:	8f 90       	pop	r8
 89e:	7f 90       	pop	r7
 8a0:	6f 90       	pop	r6
 8a2:	5f 90       	pop	r5
 8a4:	4f 90       	pop	r4
 8a6:	3f 90       	pop	r3
 8a8:	2f 90       	pop	r2
 8aa:	08 95       	ret

Disassembly of section .text.MS8607_hum_calc:

0000115e <MS8607_hum_calc>:
	P = (((D1 * SENS) >> 21) - OFF) >> 15;
	P_F = (float) P / 100;
}
void MS8607_hum_calc(uint16_t D3)
{
	RH_F = ((float)D3 * 125 / (1UL<<16) + -6);
    115e:	bc 01       	movw	r22, r24
    1160:	80 e0       	ldi	r24, 0x00	; 0
    1162:	90 e0       	ldi	r25, 0x00	; 0
    1164:	0e 94 fc 07 	call	0xff8	; 0xff8 <__floatunsisf>
    1168:	20 e0       	ldi	r18, 0x00	; 0
    116a:	30 e0       	ldi	r19, 0x00	; 0
    116c:	4a ef       	ldi	r20, 0xFA	; 250
    116e:	52 e4       	ldi	r21, 0x42	; 66
    1170:	0e 94 cf 09 	call	0x139e	; 0x139e <__mulsf3>
    1174:	20 e0       	ldi	r18, 0x00	; 0
    1176:	30 e0       	ldi	r19, 0x00	; 0
    1178:	40 e8       	ldi	r20, 0x80	; 128
    117a:	57 e3       	ldi	r21, 0x37	; 55
    117c:	0e 94 cf 09 	call	0x139e	; 0x139e <__mulsf3>
    1180:	20 e0       	ldi	r18, 0x00	; 0
    1182:	30 e0       	ldi	r19, 0x00	; 0
    1184:	40 ec       	ldi	r20, 0xC0	; 192
    1186:	50 e4       	ldi	r21, 0x40	; 64
    1188:	0e 94 a3 09 	call	0x1346	; 0x1346 <__subsf3>
    118c:	60 93 08 40 	sts	0x4008, r22	; 0x804008 <RH_F>
    1190:	70 93 09 40 	sts	0x4009, r23	; 0x804009 <RH_F+0x1>
    1194:	80 93 0a 40 	sts	0x400A, r24	; 0x80400a <RH_F+0x2>
    1198:	90 93 0b 40 	sts	0x400B, r25	; 0x80400b <RH_F+0x3>
    119c:	08 95       	ret

Disassembly of section .text.main:

000008ac <main>:
	
	//calc compensated humidity
	comp_hum = (hum + (25 - TEMP_F) * (float)(-0.15));
	
	return comp_hum;
}
 8ac:	0e 94 4d 09 	call	0x129a	; 0x129a <MS8607_init>
 8b0:	6e e1       	ldi	r22, 0x1E	; 30
 8b2:	86 e7       	ldi	r24, 0x76	; 118
 8b4:	0e 94 06 09 	call	0x120c	; 0x120c <MS8607_write>
 8b8:	6e ef       	ldi	r22, 0xFE	; 254
 8ba:	80 e4       	ldi	r24, 0x40	; 64
 8bc:	0e 94 06 09 	call	0x120c	; 0x120c <MS8607_write>
 8c0:	62 ea       	ldi	r22, 0xA2	; 162
 8c2:	86 e7       	ldi	r24, 0x76	; 118
 8c4:	0e 94 06 09 	call	0x120c	; 0x120c <MS8607_write>
 8c8:	40 91 07 40 	lds	r20, 0x4007	; 0x804007 <low_byte>
 8cc:	60 91 22 40 	lds	r22, 0x4022	; 0x804022 <high_byte>
 8d0:	86 e7       	ldi	r24, 0x76	; 118
 8d2:	0e 94 68 08 	call	0x10d0	; 0x10d0 <MS8607_PT_read>
 8d6:	80 93 02 40 	sts	0x4002, r24	; 0x804002 <C1>
 8da:	90 93 03 40 	sts	0x4003, r25	; 0x804003 <C1+0x1>
 8de:	64 ea       	ldi	r22, 0xA4	; 164
 8e0:	86 e7       	ldi	r24, 0x76	; 118
 8e2:	0e 94 06 09 	call	0x120c	; 0x120c <MS8607_write>
 8e6:	40 91 07 40 	lds	r20, 0x4007	; 0x804007 <low_byte>
 8ea:	60 91 22 40 	lds	r22, 0x4022	; 0x804022 <high_byte>
 8ee:	86 e7       	ldi	r24, 0x76	; 118
 8f0:	0e 94 68 08 	call	0x10d0	; 0x10d0 <MS8607_PT_read>
 8f4:	80 93 0e 40 	sts	0x400E, r24	; 0x80400e <C2>
 8f8:	90 93 0f 40 	sts	0x400F, r25	; 0x80400f <C2+0x1>
 8fc:	66 ea       	ldi	r22, 0xA6	; 166
 8fe:	86 e7       	ldi	r24, 0x76	; 118
 900:	0e 94 06 09 	call	0x120c	; 0x120c <MS8607_write>
 904:	40 91 07 40 	lds	r20, 0x4007	; 0x804007 <low_byte>
 908:	60 91 22 40 	lds	r22, 0x4022	; 0x804022 <high_byte>
 90c:	86 e7       	ldi	r24, 0x76	; 118
 90e:	0e 94 68 08 	call	0x10d0	; 0x10d0 <MS8607_PT_read>
 912:	80 93 0c 40 	sts	0x400C, r24	; 0x80400c <C3>
 916:	90 93 0d 40 	sts	0x400D, r25	; 0x80400d <C3+0x1>
 91a:	68 ea       	ldi	r22, 0xA8	; 168
 91c:	86 e7       	ldi	r24, 0x76	; 118
 91e:	0e 94 06 09 	call	0x120c	; 0x120c <MS8607_write>
 922:	40 91 07 40 	lds	r20, 0x4007	; 0x804007 <low_byte>
 926:	60 91 22 40 	lds	r22, 0x4022	; 0x804022 <high_byte>
 92a:	86 e7       	ldi	r24, 0x76	; 118
 92c:	0e 94 68 08 	call	0x10d0	; 0x10d0 <MS8607_PT_read>
 930:	80 93 25 40 	sts	0x4025, r24	; 0x804025 <C4>
 934:	90 93 26 40 	sts	0x4026, r25	; 0x804026 <C4+0x1>
 938:	68 ea       	ldi	r22, 0xA8	; 168
 93a:	86 e7       	ldi	r24, 0x76	; 118
 93c:	0e 94 06 09 	call	0x120c	; 0x120c <MS8607_write>
 940:	40 91 07 40 	lds	r20, 0x4007	; 0x804007 <low_byte>
 944:	60 91 22 40 	lds	r22, 0x4022	; 0x804022 <high_byte>
 948:	86 e7       	ldi	r24, 0x76	; 118
 94a:	0e 94 68 08 	call	0x10d0	; 0x10d0 <MS8607_PT_read>
 94e:	80 93 23 40 	sts	0x4023, r24	; 0x804023 <C5>
 952:	90 93 24 40 	sts	0x4024, r25	; 0x804024 <C5+0x1>
 956:	6c ea       	ldi	r22, 0xAC	; 172
 958:	86 e7       	ldi	r24, 0x76	; 118
 95a:	0e 94 06 09 	call	0x120c	; 0x120c <MS8607_write>
 95e:	40 91 07 40 	lds	r20, 0x4007	; 0x804007 <low_byte>
 962:	60 91 22 40 	lds	r22, 0x4022	; 0x804022 <high_byte>
 966:	86 e7       	ldi	r24, 0x76	; 118
 968:	0e 94 68 08 	call	0x10d0	; 0x10d0 <MS8607_PT_read>
 96c:	80 93 17 40 	sts	0x4017, r24	; 0x804017 <C6>
 970:	90 93 18 40 	sts	0x4018, r25	; 0x804018 <C6+0x1>
 974:	68 e4       	ldi	r22, 0x48	; 72
 976:	86 e7       	ldi	r24, 0x76	; 118
 978:	0e 94 06 09 	call	0x120c	; 0x120c <MS8607_write>
 97c:	8f e1       	ldi	r24, 0x1F	; 31
 97e:	9e e4       	ldi	r25, 0x4E	; 78
 980:	01 97       	sbiw	r24, 0x01	; 1
 982:	f1 f7       	brne	.-4      	; 0x980 <main+0xd4>
 984:	00 c0       	rjmp	.+0      	; 0x986 <main+0xda>
 986:	00 00       	nop
 988:	60 e0       	ldi	r22, 0x00	; 0
 98a:	86 e7       	ldi	r24, 0x76	; 118
 98c:	0e 94 06 09 	call	0x120c	; 0x120c <MS8607_write>
 990:	e4 e1       	ldi	r30, 0x14	; 20
 992:	f0 e4       	ldi	r31, 0x40	; 64
 994:	20 81       	ld	r18, Z
 996:	41 81       	ldd	r20, Z+1	; 0x01
 998:	62 81       	ldd	r22, Z+2	; 0x02
 99a:	86 e7       	ldi	r24, 0x76	; 118
 99c:	0e 94 43 07 	call	0xe86	; 0xe86 <MS8607_PT_read_convert>
 9a0:	60 93 2b 40 	sts	0x402B, r22	; 0x80402b <D1>
 9a4:	70 93 2c 40 	sts	0x402C, r23	; 0x80402c <D1+0x1>
 9a8:	80 93 2d 40 	sts	0x402D, r24	; 0x80402d <D1+0x2>
 9ac:	90 93 2e 40 	sts	0x402E, r25	; 0x80402e <D1+0x3>
 9b0:	68 e5       	ldi	r22, 0x58	; 88
 9b2:	86 e7       	ldi	r24, 0x76	; 118
 9b4:	0e 94 06 09 	call	0x120c	; 0x120c <MS8607_write>
 9b8:	8f e1       	ldi	r24, 0x1F	; 31
 9ba:	9e e4       	ldi	r25, 0x4E	; 78
 9bc:	01 97       	sbiw	r24, 0x01	; 1
 9be:	f1 f7       	brne	.-4      	; 0x9bc <main+0x110>
 9c0:	00 c0       	rjmp	.+0      	; 0x9c2 <main+0x116>
 9c2:	00 00       	nop
 9c4:	60 e0       	ldi	r22, 0x00	; 0
 9c6:	86 e7       	ldi	r24, 0x76	; 118
 9c8:	0e 94 06 09 	call	0x120c	; 0x120c <MS8607_write>
 9cc:	e4 e0       	ldi	r30, 0x04	; 4
 9ce:	f0 e4       	ldi	r31, 0x40	; 64
 9d0:	20 81       	ld	r18, Z
 9d2:	41 81       	ldd	r20, Z+1	; 0x01
 9d4:	62 81       	ldd	r22, Z+2	; 0x02
 9d6:	86 e7       	ldi	r24, 0x76	; 118
 9d8:	0e 94 43 07 	call	0xe86	; 0xe86 <MS8607_PT_read_convert>
 9dc:	60 93 19 40 	sts	0x4019, r22	; 0x804019 <D2>
 9e0:	70 93 1a 40 	sts	0x401A, r23	; 0x80401a <D2+0x1>
 9e4:	80 93 1b 40 	sts	0x401B, r24	; 0x80401b <D2+0x2>
 9e8:	90 93 1c 40 	sts	0x401C, r25	; 0x80401c <D2+0x3>
 9ec:	e0 91 17 40 	lds	r30, 0x4017	; 0x804017 <C6>
 9f0:	f0 91 18 40 	lds	r31, 0x4018	; 0x804018 <C6+0x1>
 9f4:	80 90 23 40 	lds	r8, 0x4023	; 0x804023 <C5>
 9f8:	90 90 24 40 	lds	r9, 0x4024	; 0x804024 <C5+0x1>
 9fc:	a0 90 25 40 	lds	r10, 0x4025	; 0x804025 <C4>
 a00:	b0 90 26 40 	lds	r11, 0x4026	; 0x804026 <C4+0x1>
 a04:	c0 90 0c 40 	lds	r12, 0x400C	; 0x80400c <C3>
 a08:	d0 90 0d 40 	lds	r13, 0x400D	; 0x80400d <C3+0x1>
 a0c:	e0 90 0e 40 	lds	r14, 0x400E	; 0x80400e <C2>
 a10:	f0 90 0f 40 	lds	r15, 0x400F	; 0x80400f <C2+0x1>
 a14:	00 91 02 40 	lds	r16, 0x4002	; 0x804002 <C1>
 a18:	10 91 03 40 	lds	r17, 0x4003	; 0x804003 <C1+0x1>
 a1c:	20 91 19 40 	lds	r18, 0x4019	; 0x804019 <D2>
 a20:	30 91 1a 40 	lds	r19, 0x401A	; 0x80401a <D2+0x1>
 a24:	40 91 1b 40 	lds	r20, 0x401B	; 0x80401b <D2+0x2>
 a28:	50 91 1c 40 	lds	r21, 0x401C	; 0x80401c <D2+0x3>
 a2c:	60 91 2b 40 	lds	r22, 0x402B	; 0x80402b <D1>
 a30:	70 91 2c 40 	lds	r23, 0x402C	; 0x80402c <D1+0x1>
 a34:	80 91 2d 40 	lds	r24, 0x402D	; 0x80402d <D1+0x2>
 a38:	90 91 2e 40 	lds	r25, 0x402E	; 0x80402e <D1+0x3>
 a3c:	ff 93       	push	r31
 a3e:	ef 93       	push	r30
 a40:	0e 94 b0 00 	call	0x160	; 0x160 <__data_load_end>
 a44:	67 ee       	ldi	r22, 0xE7	; 231
 a46:	80 e4       	ldi	r24, 0x40	; 64
 a48:	0e 94 bf 07 	call	0xf7e	; 0xf7e <MS8607_hum_data>
 a4c:	ed e1       	ldi	r30, 0x1D	; 29
 a4e:	f0 e4       	ldi	r31, 0x40	; 64
 a50:	00 81       	ld	r16, Z
 a52:	21 81       	ldd	r18, Z+1	; 0x01
 a54:	42 81       	ldd	r20, Z+2	; 0x02
 a56:	65 ee       	ldi	r22, 0xE5	; 229
 a58:	80 e4       	ldi	r24, 0x40	; 64
 a5a:	0e 94 3c 05 	call	0xa78	; 0xa78 <MS8607_hum_hold>
 a5e:	80 93 00 40 	sts	0x4000, r24	; 0x804000 <__DATA_REGION_ORIGIN__>
 a62:	90 93 01 40 	sts	0x4001, r25	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
 a66:	80 91 00 40 	lds	r24, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
 a6a:	90 91 01 40 	lds	r25, 0x4001	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
 a6e:	0e 94 af 08 	call	0x115e	; 0x115e <MS8607_hum_calc>
 a72:	0f 90       	pop	r0
 a74:	0f 90       	pop	r0
 a76:	24 cf       	rjmp	.-440    	; 0x8c0 <main+0x14>

Disassembly of section .text:

00001346 <__subsf3>:
    1346:	50 58       	subi	r21, 0x80	; 128

00001348 <__addsf3>:
    1348:	bb 27       	eor	r27, r27
    134a:	aa 27       	eor	r26, r26
    134c:	0e 94 8c 06 	call	0xd18	; 0xd18 <__addsf3x>
    1350:	0c 94 1d 09 	jmp	0x123a	; 0x123a <__fp_round>

Disassembly of section .text:

00000d18 <__addsf3x>:
 d18:	11 c0       	rjmp	.+34     	; 0xd3c <__addsf3x+0x24>
 d1a:	0e 94 aa 09 	call	0x1354	; 0x1354 <__fp_pscA>
 d1e:	38 f0       	brcs	.+14     	; 0xd2e <__addsf3x+0x16>
 d20:	0e 94 b1 09 	call	0x1362	; 0x1362 <__fp_pscB>
 d24:	20 f0       	brcs	.+8      	; 0xd2e <__addsf3x+0x16>
 d26:	39 f4       	brne	.+14     	; 0xd36 <__addsf3x+0x1e>
 d28:	9f 3f       	cpi	r25, 0xFF	; 255
 d2a:	19 f4       	brne	.+6      	; 0xd32 <__addsf3x+0x1a>
 d2c:	26 f4       	brtc	.+8      	; 0xd36 <__addsf3x+0x1e>
 d2e:	0c 94 d3 09 	jmp	0x13a6	; 0x13a6 <__fp_nan>
 d32:	0e f4       	brtc	.+2      	; 0xd36 <__addsf3x+0x1e>
 d34:	e0 95       	com	r30
 d36:	e7 fb       	bst	r30, 7
 d38:	0c 94 c5 09 	jmp	0x138a	; 0x138a <__fp_inf>
 d3c:	e9 2f       	mov	r30, r25
 d3e:	0e 94 8d 08 	call	0x111a	; 0x111a <__fp_split3>
 d42:	58 f3       	brcs	.-42     	; 0xd1a <__addsf3x+0x2>
 d44:	ba 17       	cp	r27, r26
 d46:	62 07       	cpc	r22, r18
 d48:	73 07       	cpc	r23, r19
 d4a:	84 07       	cpc	r24, r20
 d4c:	95 07       	cpc	r25, r21
 d4e:	20 f0       	brcs	.+8      	; 0xd58 <__addsf3x+0x40>
 d50:	79 f4       	brne	.+30     	; 0xd70 <__addsf3x+0x58>
 d52:	a6 f5       	brtc	.+104    	; 0xdbc <__addsf3x+0xa4>
 d54:	0c 94 b8 09 	jmp	0x1370	; 0x1370 <__fp_zero>
 d58:	0e f4       	brtc	.+2      	; 0xd5c <__addsf3x+0x44>
 d5a:	e0 95       	com	r30
 d5c:	0b 2e       	mov	r0, r27
 d5e:	ba 2f       	mov	r27, r26
 d60:	a0 2d       	mov	r26, r0
 d62:	0b 01       	movw	r0, r22
 d64:	b9 01       	movw	r22, r18
 d66:	90 01       	movw	r18, r0
 d68:	0c 01       	movw	r0, r24
 d6a:	ca 01       	movw	r24, r20
 d6c:	a0 01       	movw	r20, r0
 d6e:	11 24       	eor	r1, r1
 d70:	ff 27       	eor	r31, r31
 d72:	59 1b       	sub	r21, r25
 d74:	99 f0       	breq	.+38     	; 0xd9c <__addsf3x+0x84>
 d76:	59 3f       	cpi	r21, 0xF9	; 249
 d78:	50 f4       	brcc	.+20     	; 0xd8e <__addsf3x+0x76>
 d7a:	50 3e       	cpi	r21, 0xE0	; 224
 d7c:	68 f1       	brcs	.+90     	; 0xdd8 <__addsf3x+0xc0>
 d7e:	1a 16       	cp	r1, r26
 d80:	f0 40       	sbci	r31, 0x00	; 0
 d82:	a2 2f       	mov	r26, r18
 d84:	23 2f       	mov	r18, r19
 d86:	34 2f       	mov	r19, r20
 d88:	44 27       	eor	r20, r20
 d8a:	58 5f       	subi	r21, 0xF8	; 248
 d8c:	f3 cf       	rjmp	.-26     	; 0xd74 <__addsf3x+0x5c>
 d8e:	46 95       	lsr	r20
 d90:	37 95       	ror	r19
 d92:	27 95       	ror	r18
 d94:	a7 95       	ror	r26
 d96:	f0 40       	sbci	r31, 0x00	; 0
 d98:	53 95       	inc	r21
 d9a:	c9 f7       	brne	.-14     	; 0xd8e <__addsf3x+0x76>
 d9c:	7e f4       	brtc	.+30     	; 0xdbc <__addsf3x+0xa4>
 d9e:	1f 16       	cp	r1, r31
 da0:	ba 0b       	sbc	r27, r26
 da2:	62 0b       	sbc	r22, r18
 da4:	73 0b       	sbc	r23, r19
 da6:	84 0b       	sbc	r24, r20
 da8:	ba f0       	brmi	.+46     	; 0xdd8 <__addsf3x+0xc0>
 daa:	91 50       	subi	r25, 0x01	; 1
 dac:	a1 f0       	breq	.+40     	; 0xdd6 <__addsf3x+0xbe>
 dae:	ff 0f       	add	r31, r31
 db0:	bb 1f       	adc	r27, r27
 db2:	66 1f       	adc	r22, r22
 db4:	77 1f       	adc	r23, r23
 db6:	88 1f       	adc	r24, r24
 db8:	c2 f7       	brpl	.-16     	; 0xdaa <__addsf3x+0x92>
 dba:	0e c0       	rjmp	.+28     	; 0xdd8 <__addsf3x+0xc0>
 dbc:	ba 0f       	add	r27, r26
 dbe:	62 1f       	adc	r22, r18
 dc0:	73 1f       	adc	r23, r19
 dc2:	84 1f       	adc	r24, r20
 dc4:	48 f4       	brcc	.+18     	; 0xdd8 <__addsf3x+0xc0>
 dc6:	87 95       	ror	r24
 dc8:	77 95       	ror	r23
 dca:	67 95       	ror	r22
 dcc:	b7 95       	ror	r27
 dce:	f7 95       	ror	r31
 dd0:	9e 3f       	cpi	r25, 0xFE	; 254
 dd2:	08 f0       	brcs	.+2      	; 0xdd6 <__addsf3x+0xbe>
 dd4:	b0 cf       	rjmp	.-160    	; 0xd36 <__addsf3x+0x1e>
 dd6:	93 95       	inc	r25
 dd8:	88 0f       	add	r24, r24
 dda:	08 f0       	brcs	.+2      	; 0xdde <__addsf3x+0xc6>
 ddc:	99 27       	eor	r25, r25
 dde:	ee 0f       	add	r30, r30
 de0:	97 95       	ror	r25
 de2:	87 95       	ror	r24
 de4:	08 95       	ret

Disassembly of section .text:

00001396 <__divsf3>:
    1396:	0e 94 b3 05 	call	0xb66	; 0xb66 <__divsf3x>
    139a:	0c 94 1d 09 	jmp	0x123a	; 0x123a <__fp_round>

Disassembly of section .text:

00000b66 <__divsf3x>:
 b66:	10 c0       	rjmp	.+32     	; 0xb88 <__divsf3x+0x22>
 b68:	0e 94 b1 09 	call	0x1362	; 0x1362 <__fp_pscB>
 b6c:	58 f0       	brcs	.+22     	; 0xb84 <__divsf3x+0x1e>
 b6e:	0e 94 aa 09 	call	0x1354	; 0x1354 <__fp_pscA>
 b72:	40 f0       	brcs	.+16     	; 0xb84 <__divsf3x+0x1e>
 b74:	29 f4       	brne	.+10     	; 0xb80 <__divsf3x+0x1a>
 b76:	5f 3f       	cpi	r21, 0xFF	; 255
 b78:	29 f0       	breq	.+10     	; 0xb84 <__divsf3x+0x1e>
 b7a:	0c 94 c5 09 	jmp	0x138a	; 0x138a <__fp_inf>
 b7e:	51 11       	cpse	r21, r1
 b80:	0c 94 b9 09 	jmp	0x1372	; 0x1372 <__fp_szero>
 b84:	0c 94 d3 09 	jmp	0x13a6	; 0x13a6 <__fp_nan>
 b88:	0e 94 8d 08 	call	0x111a	; 0x111a <__fp_split3>
 b8c:	68 f3       	brcs	.-38     	; 0xb68 <__divsf3x+0x2>

00000b8e <__divsf3_pse>:
 b8e:	99 23       	and	r25, r25
 b90:	b1 f3       	breq	.-20     	; 0xb7e <__divsf3x+0x18>
 b92:	55 23       	and	r21, r21
 b94:	91 f3       	breq	.-28     	; 0xb7a <__divsf3x+0x14>
 b96:	95 1b       	sub	r25, r21
 b98:	55 0b       	sbc	r21, r21
 b9a:	bb 27       	eor	r27, r27
 b9c:	aa 27       	eor	r26, r26
 b9e:	62 17       	cp	r22, r18
 ba0:	73 07       	cpc	r23, r19
 ba2:	84 07       	cpc	r24, r20
 ba4:	38 f0       	brcs	.+14     	; 0xbb4 <__divsf3_pse+0x26>
 ba6:	9f 5f       	subi	r25, 0xFF	; 255
 ba8:	5f 4f       	sbci	r21, 0xFF	; 255
 baa:	22 0f       	add	r18, r18
 bac:	33 1f       	adc	r19, r19
 bae:	44 1f       	adc	r20, r20
 bb0:	aa 1f       	adc	r26, r26
 bb2:	a9 f3       	breq	.-22     	; 0xb9e <__divsf3_pse+0x10>
 bb4:	35 d0       	rcall	.+106    	; 0xc20 <__divsf3_pse+0x92>
 bb6:	0e 2e       	mov	r0, r30
 bb8:	3a f0       	brmi	.+14     	; 0xbc8 <__divsf3_pse+0x3a>
 bba:	e0 e8       	ldi	r30, 0x80	; 128
 bbc:	32 d0       	rcall	.+100    	; 0xc22 <__divsf3_pse+0x94>
 bbe:	91 50       	subi	r25, 0x01	; 1
 bc0:	50 40       	sbci	r21, 0x00	; 0
 bc2:	e6 95       	lsr	r30
 bc4:	00 1c       	adc	r0, r0
 bc6:	ca f7       	brpl	.-14     	; 0xbba <__divsf3_pse+0x2c>
 bc8:	2b d0       	rcall	.+86     	; 0xc20 <__divsf3_pse+0x92>
 bca:	fe 2f       	mov	r31, r30
 bcc:	29 d0       	rcall	.+82     	; 0xc20 <__divsf3_pse+0x92>
 bce:	66 0f       	add	r22, r22
 bd0:	77 1f       	adc	r23, r23
 bd2:	88 1f       	adc	r24, r24
 bd4:	bb 1f       	adc	r27, r27
 bd6:	26 17       	cp	r18, r22
 bd8:	37 07       	cpc	r19, r23
 bda:	48 07       	cpc	r20, r24
 bdc:	ab 07       	cpc	r26, r27
 bde:	b0 e8       	ldi	r27, 0x80	; 128
 be0:	09 f0       	breq	.+2      	; 0xbe4 <__divsf3_pse+0x56>
 be2:	bb 0b       	sbc	r27, r27
 be4:	80 2d       	mov	r24, r0
 be6:	bf 01       	movw	r22, r30
 be8:	ff 27       	eor	r31, r31
 bea:	93 58       	subi	r25, 0x83	; 131
 bec:	5f 4f       	sbci	r21, 0xFF	; 255
 bee:	3a f0       	brmi	.+14     	; 0xbfe <__divsf3_pse+0x70>
 bf0:	9e 3f       	cpi	r25, 0xFE	; 254
 bf2:	51 05       	cpc	r21, r1
 bf4:	78 f0       	brcs	.+30     	; 0xc14 <__divsf3_pse+0x86>
 bf6:	0c 94 c5 09 	jmp	0x138a	; 0x138a <__fp_inf>
 bfa:	0c 94 b9 09 	jmp	0x1372	; 0x1372 <__fp_szero>
 bfe:	5f 3f       	cpi	r21, 0xFF	; 255
 c00:	e4 f3       	brlt	.-8      	; 0xbfa <__divsf3_pse+0x6c>
 c02:	98 3e       	cpi	r25, 0xE8	; 232
 c04:	d4 f3       	brlt	.-12     	; 0xbfa <__divsf3_pse+0x6c>
 c06:	86 95       	lsr	r24
 c08:	77 95       	ror	r23
 c0a:	67 95       	ror	r22
 c0c:	b7 95       	ror	r27
 c0e:	f7 95       	ror	r31
 c10:	9f 5f       	subi	r25, 0xFF	; 255
 c12:	c9 f7       	brne	.-14     	; 0xc06 <__divsf3_pse+0x78>
 c14:	88 0f       	add	r24, r24
 c16:	91 1d       	adc	r25, r1
 c18:	96 95       	lsr	r25
 c1a:	87 95       	ror	r24
 c1c:	97 f9       	bld	r25, 7
 c1e:	08 95       	ret
 c20:	e1 e0       	ldi	r30, 0x01	; 1
 c22:	66 0f       	add	r22, r22
 c24:	77 1f       	adc	r23, r23
 c26:	88 1f       	adc	r24, r24
 c28:	bb 1f       	adc	r27, r27
 c2a:	62 17       	cp	r22, r18
 c2c:	73 07       	cpc	r23, r19
 c2e:	84 07       	cpc	r24, r20
 c30:	ba 07       	cpc	r27, r26
 c32:	20 f0       	brcs	.+8      	; 0xc3c <__divsf3_pse+0xae>
 c34:	62 1b       	sub	r22, r18
 c36:	73 0b       	sbc	r23, r19
 c38:	84 0b       	sbc	r24, r20
 c3a:	ba 0b       	sbc	r27, r26
 c3c:	ee 1f       	adc	r30, r30
 c3e:	88 f7       	brcc	.-30     	; 0xc22 <__divsf3_pse+0x94>
 c40:	e0 95       	com	r30
 c42:	08 95       	ret

Disassembly of section .text:

00001072 <__fixunssfsi>:
    1072:	0e 94 95 08 	call	0x112a	; 0x112a <__fp_splitA>
    1076:	88 f0       	brcs	.+34     	; 0x109a <__fixunssfsi+0x28>
    1078:	9f 57       	subi	r25, 0x7F	; 127
    107a:	98 f0       	brcs	.+38     	; 0x10a2 <__fixunssfsi+0x30>
    107c:	b9 2f       	mov	r27, r25
    107e:	99 27       	eor	r25, r25
    1080:	b7 51       	subi	r27, 0x17	; 23
    1082:	b0 f0       	brcs	.+44     	; 0x10b0 <__fixunssfsi+0x3e>
    1084:	e1 f0       	breq	.+56     	; 0x10be <__fixunssfsi+0x4c>
    1086:	66 0f       	add	r22, r22
    1088:	77 1f       	adc	r23, r23
    108a:	88 1f       	adc	r24, r24
    108c:	99 1f       	adc	r25, r25
    108e:	1a f0       	brmi	.+6      	; 0x1096 <__fixunssfsi+0x24>
    1090:	ba 95       	dec	r27
    1092:	c9 f7       	brne	.-14     	; 0x1086 <__fixunssfsi+0x14>
    1094:	14 c0       	rjmp	.+40     	; 0x10be <__fixunssfsi+0x4c>
    1096:	b1 30       	cpi	r27, 0x01	; 1
    1098:	91 f0       	breq	.+36     	; 0x10be <__fixunssfsi+0x4c>
    109a:	0e 94 b8 09 	call	0x1370	; 0x1370 <__fp_zero>
    109e:	b1 e0       	ldi	r27, 0x01	; 1
    10a0:	08 95       	ret
    10a2:	0c 94 b8 09 	jmp	0x1370	; 0x1370 <__fp_zero>
    10a6:	67 2f       	mov	r22, r23
    10a8:	78 2f       	mov	r23, r24
    10aa:	88 27       	eor	r24, r24
    10ac:	b8 5f       	subi	r27, 0xF8	; 248
    10ae:	39 f0       	breq	.+14     	; 0x10be <__fixunssfsi+0x4c>
    10b0:	b9 3f       	cpi	r27, 0xF9	; 249
    10b2:	cc f3       	brlt	.-14     	; 0x10a6 <__fixunssfsi+0x34>
    10b4:	86 95       	lsr	r24
    10b6:	77 95       	ror	r23
    10b8:	67 95       	ror	r22
    10ba:	b3 95       	inc	r27
    10bc:	d9 f7       	brne	.-10     	; 0x10b4 <__fixunssfsi+0x42>
    10be:	3e f4       	brtc	.+14     	; 0x10ce <__fixunssfsi+0x5c>
    10c0:	90 95       	com	r25
    10c2:	80 95       	com	r24
    10c4:	70 95       	com	r23
    10c6:	61 95       	neg	r22
    10c8:	7f 4f       	sbci	r23, 0xFF	; 255
    10ca:	8f 4f       	sbci	r24, 0xFF	; 255
    10cc:	9f 4f       	sbci	r25, 0xFF	; 255
    10ce:	08 95       	ret

Disassembly of section .text:

0000137e <__floatdisf>:
    137e:	97 fb       	bst	r25, 7
    1380:	16 f4       	brtc	.+4      	; 0x1386 <__floatdisf+0x8>
    1382:	0e 94 2e 09 	call	0x125c	; 0x125c <__fp_negdi>
    1386:	0c 94 82 07 	jmp	0xf04	; 0xf04 <__fp_di2sf>

Disassembly of section .text:

00000ff8 <__floatunsisf>:
     ff8:	e8 94       	clt
     ffa:	09 c0       	rjmp	.+18     	; 0x100e <__floatsisf+0x12>

00000ffc <__floatsisf>:
     ffc:	97 fb       	bst	r25, 7
     ffe:	3e f4       	brtc	.+14     	; 0x100e <__floatsisf+0x12>
    1000:	90 95       	com	r25
    1002:	80 95       	com	r24
    1004:	70 95       	com	r23
    1006:	61 95       	neg	r22
    1008:	7f 4f       	sbci	r23, 0xFF	; 255
    100a:	8f 4f       	sbci	r24, 0xFF	; 255
    100c:	9f 4f       	sbci	r25, 0xFF	; 255
    100e:	99 23       	and	r25, r25
    1010:	a9 f0       	breq	.+42     	; 0x103c <__floatsisf+0x40>
    1012:	f9 2f       	mov	r31, r25
    1014:	96 e9       	ldi	r25, 0x96	; 150
    1016:	bb 27       	eor	r27, r27
    1018:	93 95       	inc	r25
    101a:	f6 95       	lsr	r31
    101c:	87 95       	ror	r24
    101e:	77 95       	ror	r23
    1020:	67 95       	ror	r22
    1022:	b7 95       	ror	r27
    1024:	f1 11       	cpse	r31, r1
    1026:	f8 cf       	rjmp	.-16     	; 0x1018 <__floatsisf+0x1c>
    1028:	fa f4       	brpl	.+62     	; 0x1068 <__floatsisf+0x6c>
    102a:	bb 0f       	add	r27, r27
    102c:	11 f4       	brne	.+4      	; 0x1032 <__floatsisf+0x36>
    102e:	60 ff       	sbrs	r22, 0
    1030:	1b c0       	rjmp	.+54     	; 0x1068 <__floatsisf+0x6c>
    1032:	6f 5f       	subi	r22, 0xFF	; 255
    1034:	7f 4f       	sbci	r23, 0xFF	; 255
    1036:	8f 4f       	sbci	r24, 0xFF	; 255
    1038:	9f 4f       	sbci	r25, 0xFF	; 255
    103a:	16 c0       	rjmp	.+44     	; 0x1068 <__floatsisf+0x6c>
    103c:	88 23       	and	r24, r24
    103e:	11 f0       	breq	.+4      	; 0x1044 <__floatsisf+0x48>
    1040:	96 e9       	ldi	r25, 0x96	; 150
    1042:	11 c0       	rjmp	.+34     	; 0x1066 <__floatsisf+0x6a>
    1044:	77 23       	and	r23, r23
    1046:	21 f0       	breq	.+8      	; 0x1050 <__floatsisf+0x54>
    1048:	9e e8       	ldi	r25, 0x8E	; 142
    104a:	87 2f       	mov	r24, r23
    104c:	76 2f       	mov	r23, r22
    104e:	05 c0       	rjmp	.+10     	; 0x105a <__floatsisf+0x5e>
    1050:	66 23       	and	r22, r22
    1052:	71 f0       	breq	.+28     	; 0x1070 <__floatsisf+0x74>
    1054:	96 e8       	ldi	r25, 0x86	; 134
    1056:	86 2f       	mov	r24, r22
    1058:	70 e0       	ldi	r23, 0x00	; 0
    105a:	60 e0       	ldi	r22, 0x00	; 0
    105c:	2a f0       	brmi	.+10     	; 0x1068 <__floatsisf+0x6c>
    105e:	9a 95       	dec	r25
    1060:	66 0f       	add	r22, r22
    1062:	77 1f       	adc	r23, r23
    1064:	88 1f       	adc	r24, r24
    1066:	da f7       	brpl	.-10     	; 0x105e <__floatsisf+0x62>
    1068:	88 0f       	add	r24, r24
    106a:	96 95       	lsr	r25
    106c:	87 95       	ror	r24
    106e:	97 f9       	bld	r25, 7
    1070:	08 95       	ret

Disassembly of section .text:

00000f02 <__floatundisf>:
 f02:	e8 94       	clt

00000f04 <__fp_di2sf>:
 f04:	f9 2f       	mov	r31, r25
 f06:	96 eb       	ldi	r25, 0xB6	; 182
 f08:	ff 23       	and	r31, r31
 f0a:	81 f0       	breq	.+32     	; 0xf2c <__fp_di2sf+0x28>
 f0c:	12 16       	cp	r1, r18
 f0e:	13 06       	cpc	r1, r19
 f10:	14 06       	cpc	r1, r20
 f12:	44 0b       	sbc	r20, r20
 f14:	93 95       	inc	r25
 f16:	f6 95       	lsr	r31
 f18:	87 95       	ror	r24
 f1a:	77 95       	ror	r23
 f1c:	67 95       	ror	r22
 f1e:	57 95       	ror	r21
 f20:	40 40       	sbci	r20, 0x00	; 0
 f22:	ff 23       	and	r31, r31
 f24:	b9 f7       	brne	.-18     	; 0xf14 <__fp_di2sf+0x10>
 f26:	1b c0       	rjmp	.+54     	; 0xf5e <__fp_di2sf+0x5a>
 f28:	99 27       	eor	r25, r25
 f2a:	08 95       	ret
 f2c:	88 23       	and	r24, r24
 f2e:	51 f4       	brne	.+20     	; 0xf44 <__fp_di2sf+0x40>
 f30:	98 50       	subi	r25, 0x08	; 8
 f32:	d2 f7       	brpl	.-12     	; 0xf28 <__fp_di2sf+0x24>
 f34:	87 2b       	or	r24, r23
 f36:	76 2f       	mov	r23, r22
 f38:	65 2f       	mov	r22, r21
 f3a:	54 2f       	mov	r21, r20
 f3c:	43 2f       	mov	r20, r19
 f3e:	32 2f       	mov	r19, r18
 f40:	20 e0       	ldi	r18, 0x00	; 0
 f42:	b1 f3       	breq	.-20     	; 0xf30 <__fp_di2sf+0x2c>
 f44:	12 16       	cp	r1, r18
 f46:	13 06       	cpc	r1, r19
 f48:	14 06       	cpc	r1, r20
 f4a:	44 0b       	sbc	r20, r20
 f4c:	88 23       	and	r24, r24
 f4e:	3a f0       	brmi	.+14     	; 0xf5e <__fp_di2sf+0x5a>
 f50:	9a 95       	dec	r25
 f52:	44 0f       	add	r20, r20
 f54:	55 1f       	adc	r21, r21
 f56:	66 1f       	adc	r22, r22
 f58:	77 1f       	adc	r23, r23
 f5a:	88 1f       	adc	r24, r24
 f5c:	ca f7       	brpl	.-14     	; 0xf50 <__fp_di2sf+0x4c>
 f5e:	55 23       	and	r21, r21
 f60:	4a f4       	brpl	.+18     	; 0xf74 <__fp_di2sf+0x70>
 f62:	44 0f       	add	r20, r20
 f64:	55 1f       	adc	r21, r21
 f66:	11 f4       	brne	.+4      	; 0xf6c <__fp_di2sf+0x68>
 f68:	60 ff       	sbrs	r22, 0
 f6a:	04 c0       	rjmp	.+8      	; 0xf74 <__fp_di2sf+0x70>
 f6c:	6f 5f       	subi	r22, 0xFF	; 255
 f6e:	7f 4f       	sbci	r23, 0xFF	; 255
 f70:	8f 4f       	sbci	r24, 0xFF	; 255
 f72:	9f 4f       	sbci	r25, 0xFF	; 255
 f74:	88 0f       	add	r24, r24
 f76:	96 95       	lsr	r25
 f78:	87 95       	ror	r24
 f7a:	97 f9       	bld	r25, 7
 f7c:	08 95       	ret

Disassembly of section .text:

0000138a <__fp_inf>:
    138a:	97 f9       	bld	r25, 7
    138c:	9f 67       	ori	r25, 0x7F	; 127
    138e:	80 e8       	ldi	r24, 0x80	; 128
    1390:	70 e0       	ldi	r23, 0x00	; 0
    1392:	60 e0       	ldi	r22, 0x00	; 0
    1394:	08 95       	ret

Disassembly of section .text:

000013a6 <__fp_nan>:
    13a6:	9f ef       	ldi	r25, 0xFF	; 255
    13a8:	80 ec       	ldi	r24, 0xC0	; 192
    13aa:	08 95       	ret

Disassembly of section .text:

0000125c <__fp_negdi>:
    125c:	90 95       	com	r25
    125e:	80 95       	com	r24
    1260:	70 95       	com	r23
    1262:	60 95       	com	r22
    1264:	50 95       	com	r21
    1266:	40 95       	com	r20
    1268:	30 95       	com	r19
    126a:	21 95       	neg	r18
    126c:	3f 4f       	sbci	r19, 0xFF	; 255
    126e:	4f 4f       	sbci	r20, 0xFF	; 255
    1270:	5f 4f       	sbci	r21, 0xFF	; 255
    1272:	6f 4f       	sbci	r22, 0xFF	; 255
    1274:	7f 4f       	sbci	r23, 0xFF	; 255
    1276:	8f 4f       	sbci	r24, 0xFF	; 255
    1278:	9f 4f       	sbci	r25, 0xFF	; 255
    127a:	08 95       	ret

Disassembly of section .text:

00001354 <__fp_pscA>:
    1354:	00 24       	eor	r0, r0
    1356:	0a 94       	dec	r0
    1358:	16 16       	cp	r1, r22
    135a:	17 06       	cpc	r1, r23
    135c:	18 06       	cpc	r1, r24
    135e:	09 06       	cpc	r0, r25
    1360:	08 95       	ret

Disassembly of section .text:

00001362 <__fp_pscB>:
    1362:	00 24       	eor	r0, r0
    1364:	0a 94       	dec	r0
    1366:	12 16       	cp	r1, r18
    1368:	13 06       	cpc	r1, r19
    136a:	14 06       	cpc	r1, r20
    136c:	05 06       	cpc	r0, r21
    136e:	08 95       	ret

Disassembly of section .text:

0000123a <__fp_round>:
    123a:	09 2e       	mov	r0, r25
    123c:	03 94       	inc	r0
    123e:	00 0c       	add	r0, r0
    1240:	11 f4       	brne	.+4      	; 0x1246 <__fp_round+0xc>
    1242:	88 23       	and	r24, r24
    1244:	52 f0       	brmi	.+20     	; 0x125a <__fp_round+0x20>
    1246:	bb 0f       	add	r27, r27
    1248:	40 f4       	brcc	.+16     	; 0x125a <__fp_round+0x20>
    124a:	bf 2b       	or	r27, r31
    124c:	11 f4       	brne	.+4      	; 0x1252 <__fp_round+0x18>
    124e:	60 ff       	sbrs	r22, 0
    1250:	04 c0       	rjmp	.+8      	; 0x125a <__fp_round+0x20>
    1252:	6f 5f       	subi	r22, 0xFF	; 255
    1254:	7f 4f       	sbci	r23, 0xFF	; 255
    1256:	8f 4f       	sbci	r24, 0xFF	; 255
    1258:	9f 4f       	sbci	r25, 0xFF	; 255
    125a:	08 95       	ret

Disassembly of section .text:

0000111a <__fp_split3>:
    111a:	57 fd       	sbrc	r21, 7
    111c:	90 58       	subi	r25, 0x80	; 128
    111e:	44 0f       	add	r20, r20
    1120:	55 1f       	adc	r21, r21
    1122:	59 f0       	breq	.+22     	; 0x113a <__fp_splitA+0x10>
    1124:	5f 3f       	cpi	r21, 0xFF	; 255
    1126:	71 f0       	breq	.+28     	; 0x1144 <__fp_splitA+0x1a>
    1128:	47 95       	ror	r20

0000112a <__fp_splitA>:
    112a:	88 0f       	add	r24, r24
    112c:	97 fb       	bst	r25, 7
    112e:	99 1f       	adc	r25, r25
    1130:	61 f0       	breq	.+24     	; 0x114a <__fp_splitA+0x20>
    1132:	9f 3f       	cpi	r25, 0xFF	; 255
    1134:	79 f0       	breq	.+30     	; 0x1154 <__fp_splitA+0x2a>
    1136:	87 95       	ror	r24
    1138:	08 95       	ret
    113a:	12 16       	cp	r1, r18
    113c:	13 06       	cpc	r1, r19
    113e:	14 06       	cpc	r1, r20
    1140:	55 1f       	adc	r21, r21
    1142:	f2 cf       	rjmp	.-28     	; 0x1128 <__fp_split3+0xe>
    1144:	46 95       	lsr	r20
    1146:	f1 df       	rcall	.-30     	; 0x112a <__fp_splitA>
    1148:	08 c0       	rjmp	.+16     	; 0x115a <__fp_splitA+0x30>
    114a:	16 16       	cp	r1, r22
    114c:	17 06       	cpc	r1, r23
    114e:	18 06       	cpc	r1, r24
    1150:	99 1f       	adc	r25, r25
    1152:	f1 cf       	rjmp	.-30     	; 0x1136 <__fp_splitA+0xc>
    1154:	86 95       	lsr	r24
    1156:	71 05       	cpc	r23, r1
    1158:	61 05       	cpc	r22, r1
    115a:	08 94       	sec
    115c:	08 95       	ret

Disassembly of section .text:

00001370 <__fp_zero>:
    1370:	e8 94       	clt

00001372 <__fp_szero>:
    1372:	bb 27       	eor	r27, r27
    1374:	66 27       	eor	r22, r22
    1376:	77 27       	eor	r23, r23
    1378:	cb 01       	movw	r24, r22
    137a:	97 f9       	bld	r25, 7
    137c:	08 95       	ret

Disassembly of section .text:

0000139e <__mulsf3>:
    139e:	0e 94 22 06 	call	0xc44	; 0xc44 <__mulsf3x>
    13a2:	0c 94 1d 09 	jmp	0x123a	; 0x123a <__fp_round>

Disassembly of section .text:

00000c44 <__mulsf3x>:
 c44:	0f c0       	rjmp	.+30     	; 0xc64 <__mulsf3x+0x20>
 c46:	0e 94 aa 09 	call	0x1354	; 0x1354 <__fp_pscA>
 c4a:	38 f0       	brcs	.+14     	; 0xc5a <__mulsf3x+0x16>
 c4c:	0e 94 b1 09 	call	0x1362	; 0x1362 <__fp_pscB>
 c50:	20 f0       	brcs	.+8      	; 0xc5a <__mulsf3x+0x16>
 c52:	95 23       	and	r25, r21
 c54:	11 f0       	breq	.+4      	; 0xc5a <__mulsf3x+0x16>
 c56:	0c 94 c5 09 	jmp	0x138a	; 0x138a <__fp_inf>
 c5a:	0c 94 d3 09 	jmp	0x13a6	; 0x13a6 <__fp_nan>
 c5e:	11 24       	eor	r1, r1
 c60:	0c 94 b9 09 	jmp	0x1372	; 0x1372 <__fp_szero>
 c64:	0e 94 8d 08 	call	0x111a	; 0x111a <__fp_split3>
 c68:	70 f3       	brcs	.-36     	; 0xc46 <__mulsf3x+0x2>

00000c6a <__mulsf3_pse>:
 c6a:	95 9f       	mul	r25, r21
 c6c:	c1 f3       	breq	.-16     	; 0xc5e <__mulsf3x+0x1a>
 c6e:	95 0f       	add	r25, r21
 c70:	50 e0       	ldi	r21, 0x00	; 0
 c72:	55 1f       	adc	r21, r21
 c74:	62 9f       	mul	r22, r18
 c76:	f0 01       	movw	r30, r0
 c78:	72 9f       	mul	r23, r18
 c7a:	bb 27       	eor	r27, r27
 c7c:	f0 0d       	add	r31, r0
 c7e:	b1 1d       	adc	r27, r1
 c80:	63 9f       	mul	r22, r19
 c82:	aa 27       	eor	r26, r26
 c84:	f0 0d       	add	r31, r0
 c86:	b1 1d       	adc	r27, r1
 c88:	aa 1f       	adc	r26, r26
 c8a:	64 9f       	mul	r22, r20
 c8c:	66 27       	eor	r22, r22
 c8e:	b0 0d       	add	r27, r0
 c90:	a1 1d       	adc	r26, r1
 c92:	66 1f       	adc	r22, r22
 c94:	82 9f       	mul	r24, r18
 c96:	22 27       	eor	r18, r18
 c98:	b0 0d       	add	r27, r0
 c9a:	a1 1d       	adc	r26, r1
 c9c:	62 1f       	adc	r22, r18
 c9e:	73 9f       	mul	r23, r19
 ca0:	b0 0d       	add	r27, r0
 ca2:	a1 1d       	adc	r26, r1
 ca4:	62 1f       	adc	r22, r18
 ca6:	83 9f       	mul	r24, r19
 ca8:	a0 0d       	add	r26, r0
 caa:	61 1d       	adc	r22, r1
 cac:	22 1f       	adc	r18, r18
 cae:	74 9f       	mul	r23, r20
 cb0:	33 27       	eor	r19, r19
 cb2:	a0 0d       	add	r26, r0
 cb4:	61 1d       	adc	r22, r1
 cb6:	23 1f       	adc	r18, r19
 cb8:	84 9f       	mul	r24, r20
 cba:	60 0d       	add	r22, r0
 cbc:	21 1d       	adc	r18, r1
 cbe:	82 2f       	mov	r24, r18
 cc0:	76 2f       	mov	r23, r22
 cc2:	6a 2f       	mov	r22, r26
 cc4:	11 24       	eor	r1, r1
 cc6:	9f 57       	subi	r25, 0x7F	; 127
 cc8:	50 40       	sbci	r21, 0x00	; 0
 cca:	9a f0       	brmi	.+38     	; 0xcf2 <__mulsf3_pse+0x88>
 ccc:	f1 f0       	breq	.+60     	; 0xd0a <__mulsf3_pse+0xa0>
 cce:	88 23       	and	r24, r24
 cd0:	4a f0       	brmi	.+18     	; 0xce4 <__mulsf3_pse+0x7a>
 cd2:	ee 0f       	add	r30, r30
 cd4:	ff 1f       	adc	r31, r31
 cd6:	bb 1f       	adc	r27, r27
 cd8:	66 1f       	adc	r22, r22
 cda:	77 1f       	adc	r23, r23
 cdc:	88 1f       	adc	r24, r24
 cde:	91 50       	subi	r25, 0x01	; 1
 ce0:	50 40       	sbci	r21, 0x00	; 0
 ce2:	a9 f7       	brne	.-22     	; 0xcce <__mulsf3_pse+0x64>
 ce4:	9e 3f       	cpi	r25, 0xFE	; 254
 ce6:	51 05       	cpc	r21, r1
 ce8:	80 f0       	brcs	.+32     	; 0xd0a <__mulsf3_pse+0xa0>
 cea:	0c 94 c5 09 	jmp	0x138a	; 0x138a <__fp_inf>
 cee:	0c 94 b9 09 	jmp	0x1372	; 0x1372 <__fp_szero>
 cf2:	5f 3f       	cpi	r21, 0xFF	; 255
 cf4:	e4 f3       	brlt	.-8      	; 0xcee <__mulsf3_pse+0x84>
 cf6:	98 3e       	cpi	r25, 0xE8	; 232
 cf8:	d4 f3       	brlt	.-12     	; 0xcee <__mulsf3_pse+0x84>
 cfa:	86 95       	lsr	r24
 cfc:	77 95       	ror	r23
 cfe:	67 95       	ror	r22
 d00:	b7 95       	ror	r27
 d02:	f7 95       	ror	r31
 d04:	e7 95       	ror	r30
 d06:	9f 5f       	subi	r25, 0xFF	; 255
 d08:	c1 f7       	brne	.-16     	; 0xcfa <__mulsf3_pse+0x90>
 d0a:	fe 2b       	or	r31, r30
 d0c:	88 0f       	add	r24, r24
 d0e:	91 1d       	adc	r25, r1
 d10:	96 95       	lsr	r25
 d12:	87 95       	ror	r24
 d14:	97 f9       	bld	r25, 7
 d16:	08 95       	ret

Disassembly of section .text.libgcc.mul:

000012e4 <__muluhisi3>:
    12e4:	0e 94 3e 09 	call	0x127c	; 0x127c <__umulhisi3>
    12e8:	a5 9f       	mul	r26, r21
    12ea:	90 0d       	add	r25, r0
    12ec:	b4 9f       	mul	r27, r20
    12ee:	90 0d       	add	r25, r0
    12f0:	a4 9f       	mul	r26, r20
    12f2:	80 0d       	add	r24, r0
    12f4:	91 1d       	adc	r25, r1
    12f6:	11 24       	eor	r1, r1
    12f8:	08 95       	ret

Disassembly of section .text.libgcc.mul:

00000de6 <__muldi3>:
 de6:	df 93       	push	r29
 de8:	cf 93       	push	r28
 dea:	1f 93       	push	r17
 dec:	0f 93       	push	r16
 dee:	9a 9d       	mul	r25, r10
 df0:	f0 2d       	mov	r31, r0
 df2:	21 9f       	mul	r18, r17
 df4:	f0 0d       	add	r31, r0
 df6:	8b 9d       	mul	r24, r11
 df8:	f0 0d       	add	r31, r0
 dfa:	8a 9d       	mul	r24, r10
 dfc:	e0 2d       	mov	r30, r0
 dfe:	f1 0d       	add	r31, r1
 e00:	03 9f       	mul	r16, r19
 e02:	f0 0d       	add	r31, r0
 e04:	02 9f       	mul	r16, r18
 e06:	e0 0d       	add	r30, r0
 e08:	f1 1d       	adc	r31, r1
 e0a:	4e 9d       	mul	r20, r14
 e0c:	e0 0d       	add	r30, r0
 e0e:	f1 1d       	adc	r31, r1
 e10:	5e 9d       	mul	r21, r14
 e12:	f0 0d       	add	r31, r0
 e14:	4f 9d       	mul	r20, r15
 e16:	f0 0d       	add	r31, r0
 e18:	7f 93       	push	r23
 e1a:	6f 93       	push	r22
 e1c:	bf 92       	push	r11
 e1e:	af 92       	push	r10
 e20:	5f 93       	push	r21
 e22:	4f 93       	push	r20
 e24:	d5 01       	movw	r26, r10
 e26:	0e 94 3e 09 	call	0x127c	; 0x127c <__umulhisi3>
 e2a:	8b 01       	movw	r16, r22
 e2c:	ac 01       	movw	r20, r24
 e2e:	d7 01       	movw	r26, r14
 e30:	0e 94 3e 09 	call	0x127c	; 0x127c <__umulhisi3>
 e34:	eb 01       	movw	r28, r22
 e36:	e8 0f       	add	r30, r24
 e38:	f9 1f       	adc	r31, r25
 e3a:	d6 01       	movw	r26, r12
 e3c:	0e 94 88 09 	call	0x1310	; 0x1310 <__muldi3_6>
 e40:	2f 91       	pop	r18
 e42:	3f 91       	pop	r19
 e44:	d6 01       	movw	r26, r12
 e46:	0e 94 3e 09 	call	0x127c	; 0x127c <__umulhisi3>
 e4a:	c6 0f       	add	r28, r22
 e4c:	d7 1f       	adc	r29, r23
 e4e:	e8 1f       	adc	r30, r24
 e50:	f9 1f       	adc	r31, r25
 e52:	af 91       	pop	r26
 e54:	bf 91       	pop	r27
 e56:	0e 94 88 09 	call	0x1310	; 0x1310 <__muldi3_6>
 e5a:	2f 91       	pop	r18
 e5c:	3f 91       	pop	r19
 e5e:	0e 94 3e 09 	call	0x127c	; 0x127c <__umulhisi3>
 e62:	c6 0f       	add	r28, r22
 e64:	d7 1f       	adc	r29, r23
 e66:	e8 1f       	adc	r30, r24
 e68:	f9 1f       	adc	r31, r25
 e6a:	d6 01       	movw	r26, r12
 e6c:	0e 94 3e 09 	call	0x127c	; 0x127c <__umulhisi3>
 e70:	e6 0f       	add	r30, r22
 e72:	f7 1f       	adc	r31, r23
 e74:	98 01       	movw	r18, r16
 e76:	be 01       	movw	r22, r28
 e78:	cf 01       	movw	r24, r30
 e7a:	11 24       	eor	r1, r1
 e7c:	0f 91       	pop	r16
 e7e:	1f 91       	pop	r17
 e80:	cf 91       	pop	r28
 e82:	df 91       	pop	r29
 e84:	08 95       	ret

Disassembly of section .text.libgcc.mul:

00001310 <__muldi3_6>:
    1310:	0e 94 3e 09 	call	0x127c	; 0x127c <__umulhisi3>
    1314:	46 0f       	add	r20, r22
    1316:	57 1f       	adc	r21, r23
    1318:	c8 1f       	adc	r28, r24
    131a:	d9 1f       	adc	r29, r25
    131c:	08 f4       	brcc	.+2      	; 0x1320 <__muldi3_6+0x10>
    131e:	31 96       	adiw	r30, 0x01	; 1
    1320:	08 95       	ret

Disassembly of section .text.libgcc.builtins:

000011da <__ashldi3>:
    11da:	0f 93       	push	r16
    11dc:	08 30       	cpi	r16, 0x08	; 8
    11de:	90 f0       	brcs	.+36     	; 0x1204 <__ashldi3+0x2a>
    11e0:	98 2f       	mov	r25, r24
    11e2:	87 2f       	mov	r24, r23
    11e4:	76 2f       	mov	r23, r22
    11e6:	65 2f       	mov	r22, r21
    11e8:	54 2f       	mov	r21, r20
    11ea:	43 2f       	mov	r20, r19
    11ec:	32 2f       	mov	r19, r18
    11ee:	22 27       	eor	r18, r18
    11f0:	08 50       	subi	r16, 0x08	; 8
    11f2:	f4 cf       	rjmp	.-24     	; 0x11dc <__ashldi3+0x2>
    11f4:	22 0f       	add	r18, r18
    11f6:	33 1f       	adc	r19, r19
    11f8:	44 1f       	adc	r20, r20
    11fa:	55 1f       	adc	r21, r21
    11fc:	66 1f       	adc	r22, r22
    11fe:	77 1f       	adc	r23, r23
    1200:	88 1f       	adc	r24, r24
    1202:	99 1f       	adc	r25, r25
    1204:	0a 95       	dec	r16
    1206:	b2 f7       	brpl	.-20     	; 0x11f4 <__ashldi3+0x1a>
    1208:	0f 91       	pop	r16
    120a:	08 95       	ret

Disassembly of section .text.libgcc.builtins:

0000119e <__ashrdi3>:
    119e:	97 fb       	bst	r25, 7
    11a0:	10 f8       	bld	r1, 0

000011a2 <__lshrdi3>:
    11a2:	16 94       	lsr	r1
    11a4:	00 08       	sbc	r0, r0
    11a6:	0f 93       	push	r16
    11a8:	08 30       	cpi	r16, 0x08	; 8
    11aa:	98 f0       	brcs	.+38     	; 0x11d2 <__lshrdi3+0x30>
    11ac:	08 50       	subi	r16, 0x08	; 8
    11ae:	23 2f       	mov	r18, r19
    11b0:	34 2f       	mov	r19, r20
    11b2:	45 2f       	mov	r20, r21
    11b4:	56 2f       	mov	r21, r22
    11b6:	67 2f       	mov	r22, r23
    11b8:	78 2f       	mov	r23, r24
    11ba:	89 2f       	mov	r24, r25
    11bc:	90 2d       	mov	r25, r0
    11be:	f4 cf       	rjmp	.-24     	; 0x11a8 <__lshrdi3+0x6>
    11c0:	05 94       	asr	r0
    11c2:	97 95       	ror	r25
    11c4:	87 95       	ror	r24
    11c6:	77 95       	ror	r23
    11c8:	67 95       	ror	r22
    11ca:	57 95       	ror	r21
    11cc:	47 95       	ror	r20
    11ce:	37 95       	ror	r19
    11d0:	27 95       	ror	r18
    11d2:	0a 95       	dec	r16
    11d4:	aa f7       	brpl	.-22     	; 0x11c0 <__lshrdi3+0x1e>
    11d6:	0f 91       	pop	r16
    11d8:	08 95       	ret

Disassembly of section .text.libgcc:

00001322 <__adddi3>:
    1322:	2a 0d       	add	r18, r10
    1324:	3b 1d       	adc	r19, r11
    1326:	4c 1d       	adc	r20, r12
    1328:	5d 1d       	adc	r21, r13
    132a:	6e 1d       	adc	r22, r14
    132c:	7f 1d       	adc	r23, r15
    132e:	80 1f       	adc	r24, r16
    1330:	91 1f       	adc	r25, r17
    1332:	08 95       	ret

Disassembly of section .text.libgcc:

000012b4 <__adddi3_s8>:
    12b4:	00 24       	eor	r0, r0
    12b6:	a7 fd       	sbrc	r26, 7
    12b8:	00 94       	com	r0
    12ba:	2a 0f       	add	r18, r26
    12bc:	30 1d       	adc	r19, r0
    12be:	40 1d       	adc	r20, r0
    12c0:	50 1d       	adc	r21, r0
    12c2:	60 1d       	adc	r22, r0
    12c4:	70 1d       	adc	r23, r0
    12c6:	80 1d       	adc	r24, r0
    12c8:	90 1d       	adc	r25, r0
    12ca:	08 95       	ret

Disassembly of section .text.libgcc:

00001334 <__subdi3>:
    1334:	2a 19       	sub	r18, r10
    1336:	3b 09       	sbc	r19, r11
    1338:	4c 09       	sbc	r20, r12
    133a:	5d 09       	sbc	r21, r13
    133c:	6e 09       	sbc	r22, r14
    133e:	7f 09       	sbc	r23, r15
    1340:	80 0b       	sbc	r24, r16
    1342:	91 0b       	sbc	r25, r17
    1344:	08 95       	ret

Disassembly of section .text.libgcc:

000012cc <__cmpdi2_s8>:
    12cc:	00 24       	eor	r0, r0
    12ce:	a7 fd       	sbrc	r26, 7
    12d0:	00 94       	com	r0
    12d2:	2a 17       	cp	r18, r26
    12d4:	30 05       	cpc	r19, r0
    12d6:	40 05       	cpc	r20, r0
    12d8:	50 05       	cpc	r21, r0
    12da:	60 05       	cpc	r22, r0
    12dc:	70 05       	cpc	r23, r0
    12de:	80 05       	cpc	r24, r0
    12e0:	90 05       	cpc	r25, r0
    12e2:	08 95       	ret

Disassembly of section .text.libgcc.mul:

0000127c <__umulhisi3>:
    127c:	a2 9f       	mul	r26, r18
    127e:	b0 01       	movw	r22, r0
    1280:	b3 9f       	mul	r27, r19
    1282:	c0 01       	movw	r24, r0
    1284:	a3 9f       	mul	r26, r19
    1286:	70 0d       	add	r23, r0
    1288:	81 1d       	adc	r24, r1
    128a:	11 24       	eor	r1, r1
    128c:	91 1d       	adc	r25, r1
    128e:	b2 9f       	mul	r27, r18
    1290:	70 0d       	add	r23, r0
    1292:	81 1d       	adc	r24, r1
    1294:	11 24       	eor	r1, r1
    1296:	91 1d       	adc	r25, r1
    1298:	08 95       	ret

Disassembly of section .text.__dummy_fini:

000013b4 <_fini>:
    13b4:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

000013b6 <__funcs_on_exit>:
    13b6:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

000013b8 <__simulator_exit>:
    13b8:	08 95       	ret

Disassembly of section .text.exit:

000012fa <exit>:
    12fa:	ec 01       	movw	r28, r24
    12fc:	0e 94 db 09 	call	0x13b6	; 0x13b6 <__funcs_on_exit>
    1300:	0e 94 da 09 	call	0x13b4	; 0x13b4 <_fini>
    1304:	ce 01       	movw	r24, r28
    1306:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <__simulator_exit>
    130a:	ce 01       	movw	r24, r28
    130c:	0e 94 d8 09 	call	0x13b0	; 0x13b0 <_Exit>

Disassembly of section .text._Exit:

000013b0 <_Exit>:
    13b0:	0e 94 ae 00 	call	0x15c	; 0x15c <_exit>
